
  test_sub_control_plane_sub_compute: "Topology test_sub_control_plane_sub_compute" {
  
  inputs {
    shape: class
  
    \#floating_ip_pool: ""
    
    \#key_name: ""
    
  }
  
  node_os_flavor: "os_flavor\n(nova.Flavor)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_flavor.svg"
    
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "08b9e6b4a1464caab0a16ee10417a44f"
    
    +tosca_name: "os_flavor"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  flavor: "flavor\n(nova.Flavor)" {
  
  attributes {
    shape: class
  
    +openstack_id: "None"
    
    \#disk_size: "10737418240"
    
    \#mem_size: "1073741824"
    
    \#num_cpus: "1"
    
  }
  
  }
  
  }
  
  node_os_floating_ip: "os_floating_ip\n(neutron.FloatingIp)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_floating_ip.svg"
    
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "c2945e10c2914db28fcab8d5471cb4a2"
    
    +tosca_name: "os_floating_ip"
    
  }
  
  endpoint: "endpoint\n(neutron.FloatingIp)" {
  
  attributes {
    shape: class
  
    \#initiator: "source"
    
    \#network_name: ""
    
    \#protocol: "tcp"
    
    \#secure: "False"
    
    +ip_address: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_nova_server: "nova_server\n(FloatingIpToCompute)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_os_image: "os_image\n(glance.WebImage)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_image.svg"
    
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "c5d03383f142488c81122b72dc99a52e"
    
    +tosca_name: "os_image"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  image: "image\n(glance.WebImage)" {
  
  attributes {
    shape: class
  
    +openstack_id: "None"
    
    \#architecture: "x86_64"
    
    \#distribution: "ubuntu"
    
    \#version: "20.04"
    
  }
  
  }
  
  }
  
  node_os_key_pair: "os_key_pair\n(nova.KeyPair)" {
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "efc95f7be27c4a09b2d8d02f8299e8c6"
    
    +tosca_name: "os_key_pair"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  key_pair: "key_pair\n(nova.KeyPair)" {
  
  attributes {
    shape: class
  
    \#name: ""
    
  }
  
  }
  
  }
  
  node_os_security_group_custom: "os_security_group_custom\n(neutron.SecurityGroup)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_security_group_custom.svg"
    
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "1d3a30e69d0d4f67840743f55b032a85"
    
    +tosca_name: "os_security_group_custom"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  security_group: "security_group\n(neutron.SecurityGroup)" {
  
  attributes {
    shape: class
  
    \#name: "os_server-security-group"
    
  }
  
  }
  
  }
  
  node_os_security_group_custom_rule_incoming_tcp_traffic: "os_security_group_custom_rule_incoming_tcp_traffic\n(neutron.SecurityGroupRule)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_security_group_custom_rule_incoming_tcp_traffic.svg"
    
  attributes {
    shape: class
  
    \#direction: "ingress"
    
    \#ethertype: "IPv4"
    
    \#protocol: "tcp"
    
    \#remote_ip_prefix: "0.0.0.0/0"
    
    +state: "initial"
    
    +tosca_id: "04ffd3b096fe4f16a4384559dc31b98b"
    
    +tosca_name: "os_security_group_custom_rule_incoming_tcp_traffic"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_security_group: "security_group\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_os_security_group_default: "os_security_group_default\n(neutron.SecurityGroup)" {
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "37d210d6b1e0404a8defeabb92493493"
    
    +tosca_name: "os_security_group_default"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  security_group: "security_group\n(neutron.SecurityGroup)" {
  
  attributes {
    shape: class
  
    \#name: "default"
    
  }
  
  }
  
  }
  
  node_os_server: "os_server\n(nova.Server)" {
  
    link: "./test_sub_control_plane_sub_compute_sub_os_server.svg"
    
  attributes {
    shape: class
  
    +networks: "None"
    
    +ports: "None"
    
    +private_address: "None"
    
    +public_address: "None"
    
    +security_groups: "None"
    
    +state: "initial"
    
    +tosca_id: "2ad95bf3a8b24bcba46977a2fd7a75b6"
    
    +tosca_name: "os_server"
    
  }
  
  binding: "binding\n(tosca::Bindable)" {
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  private_endpoint: "private_endpoint\n(tosca::Endpoint)" {
  
  attributes {
    shape: class
  
    \#initiator: "source"
    
    \#network_name: "net-for-intra-sandbox"
    
    \#protocol: "tcp"
    
    \#secure: "True"
    
    +ip_address: "None"
    
  }
  
  }
  
  scalable: "scalable\n(tosca::Scalable)" {
  
  attributes {
    shape: class
  
    \#max_instances: "1"
    
    \#min_instances: "1"
    
    \#default_instances: "1"
    
  }
  
  }
  
  server: "server\n(nova.Server)" {
  
  attributes {
    shape: class
  
    +openstack_id: "None"
    
  }
  
  }
  
  rel_image: "image\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_flavor: "flavor\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_key_pair: "key_pair\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_security_group: "security_group\n(ComputeToSecurityGroup)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_security_group: "security_group\n(ComputeToSecurityGroup)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  }
  
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_floating_ip.rel_nova_server -> test_sub_control_plane_sub_compute.node_os_server
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_security_group_custom_rule_incoming_tcp_traffic.rel_security_group -> test_sub_control_plane_sub_compute.node_os_security_group_custom
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_server.rel_image -> test_sub_control_plane_sub_compute.node_os_image
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_server.rel_flavor -> test_sub_control_plane_sub_compute.node_os_flavor
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_server.rel_key_pair -> test_sub_control_plane_sub_compute.node_os_key_pair
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_server.rel_security_group -> test_sub_control_plane_sub_compute.node_os_security_group_default
      
      test_sub_control_plane_sub_compute { link: "./test_sub_control_plane_sub_compute.svg" }
      test_sub_control_plane_sub_compute.node_os_server.rel_security_group -> test_sub_control_plane_sub_compute.node_os_security_group_custom
      