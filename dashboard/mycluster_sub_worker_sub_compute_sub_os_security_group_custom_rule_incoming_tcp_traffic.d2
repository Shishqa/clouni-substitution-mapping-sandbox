
  mycluster_sub_worker_sub_compute_sub_os_security_group_custom_rule_incoming_tcp_traffic: "Topology mycluster_sub_worker_sub_compute_sub_os_security_group_custom_rule_incoming_tcp_traffic" {
  
  inputs {
    shape: class
  
    \#direction: "ingress"
    
    \#ethertype: "IPv4"
    
    \#port_range_max: "None"
    
    \#port_range_min: "None"
    
    \#protocol: "tcp"
    
    \#remote_ip_prefix: "0.0.0.0/0"
    
  }
  
  node_os_security_group_rule: "os_security_group_rule\n(neutron.SecurityGroupRule)" {
  
    style { fill: honeydew }
    
  attributes {
    shape: class
  
    \#direction: "ingress"
    
    \#ethertype: "IPv4"
    
    \#port_range_max: "None"
    
    \#port_range_min: "None"
    
    \#protocol: "tcp"
    
    \#remote_ip_prefix: "0.0.0.0/0"
    
    +state: "started"
    
    +tosca_id: "8023c053b3074e5daa0d351a771bbba8"
    
    +tosca_name: "os_security_group_rule"
    
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_security_group: "security_group\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  }
  
      mycluster_sub_worker_sub_compute { link: "./mycluster_sub_worker_sub_compute.svg" }
      mycluster_sub_worker_sub_compute_sub_os_security_group_custom_rule_incoming_tcp_traffic.node_os_security_group_rule.rel_security_group -> mycluster_sub_worker_sub_compute.node_os_security_group_custom
      