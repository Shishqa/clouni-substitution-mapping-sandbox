
  test_sub_control_plane: "Topology test_sub_control_plane" {
  
  inputs {
    shape: class
  
    \#cluster_name: "None"
    
    \#kubernetes_version: "None"
    
    \#pod_cidr: "10.233.0.0/16"
    
    \#service_cidr: "10.32.0.0/16"
    
  }
  
  node_apiserver: "apiserver\n(kubetos.nodes.Kubernetes.APIServer)" {
  
    link: "./test_sub_control_plane_sub_apiserver.svg"
    
  attributes {
    shape: class
  
    \#component_version: "1.21.0"
    
    \#service_cidr: "10.32.0.0/16"
    
    +state: "initial"
    
    +tosca_id: "dd79c633cca7481f96a148167f7e0d0f"
    
    +tosca_name: "apiserver"
    
  }
  
  access_address: "access_address\n(tosca::Endpoint)" {
  
  attributes {
    shape: class
  
    \#initiator: "source"
    
    \#network_name: "PRIVATE"
    
    \#protocol: "tcp"
    
    \#secure: "False"
    
    +ip_address: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  kubelet_client_cert: "kubelet_client_cert\n(kubetos.capabilities.Certificate)" {
  
  attributes {
    shape: class
  
    \#common_name: "kubernetes"
    
    \#hostnames: "[]"
    
    \#organisation: "system:masters"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  tls_cert: "tls_cert\n(kubetos.capabilities.Certificate)" {
  
  attributes {
    shape: class
  
    \#common_name: "kubernetes"
    
    \#hostnames: "['compute', None, None, '10.32.0.1', '127.0.0.1']"
    
    \#organisation: "kubernetes"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  rel_host: "host\n(tosca::HostedOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_etcd: "etcd\n(tosca::ConnectsTo)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_service_account_issuer: "service_account_issuer\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_ca: "ca\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_ca: "ca\n(kubetos.nodes.CertificateAuthority)" {
  
    link: "./test_sub_control_plane_sub_ca.svg"
    
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "999f5d12399741e2b3a3bddfb0294f48"
    
    +tosca_name: "ca"
    
  }
  
  ca: "ca\n(kubetos.capabilities.CertificateAuthority)" {
  
  attributes {
    shape: class
  
    \#common_name: "kubernetes-ca"
    
    \#hostnames: "[]"
    
    \#organisation: "kubernetes"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  }
  
  node_compute: "compute\n(tosca::Compute)" {
  
  attributes {
    shape: class
  
    +networks: "None"
    
    +ports: "None"
    
    +private_address: "None"
    
    +public_address: "None"
    
    +state: "initial"
    
    +tosca_id: "688a1e2df4a84bfb8e1ce7e931a667c9"
    
    +tosca_name: "compute"
    
  }
  
  binding: "binding\n(tosca::Bindable)" {
  
  }
  
  endpoint: "endpoint\n(tosca::Endpoint.Admin)" {
  
  attributes {
    shape: class
  
    \#initiator: "source"
    
    \#network_name: "PRIVATE"
    
    \#protocol: "tcp"
    
    \#secure: "True"
    
    +ip_address: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  host: "host\n(tosca::Compute)" {
  
  }
  
  os: "os\n(tosca::OperatingSystem)" {
  
  }
  
  scalable: "scalable\n(tosca::Scalable)" {
  
  attributes {
    shape: class
  
    \#max_instances: "1"
    
    \#min_instances: "1"
    
  }
  
  }
  
  }
  
  node_controller_manager: "controller_manager\n(kubetos.nodes.Kubernetes.ControllerManager)" {
  
    link: "./test_sub_control_plane_sub_controller_manager.svg"
    
  attributes {
    shape: class
  
    \#component_version: "1.21.0"
    
    \#pod_cidr: "10.233.0.0/16"
    
    \#service_cidr: "10.32.0.0/16"
    
    +state: "initial"
    
    +tosca_id: "92c1a4bfa40349788b9e7d6c9c75dca1"
    
    +tosca_name: "controller_manager"
    
  }
  
  client_cert: "client_cert\n(kubetos.capabilities.Certificate)" {
  
  attributes {
    shape: class
  
    \#common_name: "system:kube-controller-manager"
    
    \#hostnames: "[]"
    
    \#organisation: "system:kube-controller-manager"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_host: "host\n(tosca::HostedOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_apiserver: "apiserver\n(tosca::ConnectsTo)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_service_account_issuer: "service_account_issuer\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_ca: "ca\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_etcd: "etcd\n(kubetos.nodes.Etcd)" {
  
    link: "./test_sub_control_plane_sub_etcd.svg"
    
  attributes {
    shape: class
  
    \#backup_retention_count: "-1"
    
    \#component_version: "3.4.13"
    
    \#election_timeout: "5"
    
    \#heartbeat_interval: "0.25"
    
    \#max_snapshots: "0"
    
    \#max_wals: "0"
    
    \#quota_backend_bytes: "2147483648"
    
    \#snapshot_count: "10000"
    
    +name: "ea2bdee0e3e2454587de3d0fe13826a1"
    
    +peers: "None"
    
    +state: "initial"
    
    +tosca_id: "ea2bdee0e3e2454587de3d0fe13826a1"
    
    +tosca_name: "etcd"
    
  }
  
  access_address: "access_address\n(kubetos.capabilities.Etcd.Endpoint.Access)" {
  
  attributes {
    shape: class
  
    \#api_version: "v2"
    
    \#initiator: "source"
    
    \#network_name: "PRIVATE"
    
    \#port: "2379"
    
    \#protocol: "tcp"
    
    \#secure: "False"
    
    +ip_address: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  peer_address: "peer_address\n(kubetos.capabilities.Etcd.Endpoint.Peer)" {
  
  attributes {
    shape: class
  
    \#initiator: "source"
    
    \#network_name: "PRIVATE"
    
    \#port: "2380"
    
    \#protocol: "tcp"
    
    \#secure: "False"
    
    +ip_address: "None"
    
  }
  
  }
  
  rel_host: "host\n(tosca::HostedOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_scheduler: "scheduler\n(kubetos.nodes.Kubernetes.Scheduler)" {
  
    link: "./test_sub_control_plane_sub_scheduler.svg"
    
  attributes {
    shape: class
  
    \#component_version: "1.21.0"
    
    \#config_path: "/etc/kubernetes/kube-scheduler.yaml"
    
    +state: "initial"
    
    +tosca_id: "5041e26dde284051a85efd94589740c4"
    
    +tosca_name: "scheduler"
    
  }
  
  client_cert: "client_cert\n(kubetos.capabilities.Certificate)" {
  
  attributes {
    shape: class
  
    \#common_name: "system:kube-scheduler"
    
    \#hostnames: "[]"
    
    \#organisation: "system:kube-scheduler"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_host: "host\n(tosca::HostedOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  rel_apiserver: "apiserver\n(tosca::ConnectsTo)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  node_service_account_issuer: "service_account_issuer\n(kubetos.nodes.Kubernetes.ServiceAccoutIssuer)" {
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "8e2c4cc17dea439c9610fb88ba9ad26f"
    
    +tosca_name: "service_account_issuer"
    
  }
  
  cert: "cert\n(kubetos.capabilities.Certificate)" {
  
  attributes {
    shape: class
  
    \#common_name: "service-accounts"
    
    \#hostnames: "[]"
    
    \#organisation: "kubernetes"
    
    +cert: "None"
    
    +key: "None"
    
  }
  
  }
  
  feature: "feature\n(tosca::Node)" {
  
  }
  
  rel_ca: "ca\n(tosca::DependsOn)" {
    shape: parallelogram
  
  attributes {
    shape: class
  
    +state: "initial"
    
    +tosca_id: "None"
    
    +tosca_name: "None"
    
  }
  
  }
  
  }
  
  }
  
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_apiserver.rel_host -> test_sub_control_plane.node_compute
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_apiserver.rel_etcd -> test_sub_control_plane.node_etcd
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_apiserver.rel_service_account_issuer -> test_sub_control_plane.node_service_account_issuer
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_apiserver.rel_ca -> test_sub_control_plane.node_ca
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_controller_manager.rel_host -> test_sub_control_plane.node_compute
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_controller_manager.rel_apiserver -> test_sub_control_plane.node_apiserver
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_controller_manager.rel_service_account_issuer -> test_sub_control_plane.node_service_account_issuer
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_controller_manager.rel_ca -> test_sub_control_plane.node_ca
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_etcd.rel_host -> test_sub_control_plane.node_compute
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_scheduler.rel_host -> test_sub_control_plane.node_compute
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_scheduler.rel_apiserver -> test_sub_control_plane.node_apiserver
      
      test_sub_control_plane { link: "./test_sub_control_plane.svg" }
      test_sub_control_plane.node_service_account_issuer.rel_ca -> test_sub_control_plane.node_ca
      