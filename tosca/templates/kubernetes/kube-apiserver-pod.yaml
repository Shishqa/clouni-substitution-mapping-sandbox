tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: "kubetos"
  template_author: "shishqa"
  template_version: "1.0"

imports:
  - ../../profiles/etcd/main.yaml
  - ../../profiles/cri/main.yaml
  - ../../profiles/cni/main.yaml
  - ../../profiles/kubernetes/cluster.yaml
  - ../../profiles/kubernetes/resources.yaml

# node_types:

  # kubetos.nodes.Kubernetes.APIServer.StaticPod:
  #   derived_from: kubetos.nodes.Kubernetes.StaticPod
  #   capabilities:
  #     access_address:
  #       type: tosca.capabilities.Endpoint
  #     kubelet_client_cert:
  #       type: kubetos.capabilities.Certificate
  #     tls_cert:
  #       type: kubetos.capabilities.Certificate
  #   requirements:
  #     - etcd:
  #         capability: tosca.capabilities.Endpoint
  #         relationship: tosca.relationships.ConnectsTo
  #         occurrences: [ 1, UNBOUNDED ]
  #     - service_account_issuer:
  #         capability: kubetos.capabilities.Certificate
  #         relationship: tosca.relationships.DependsOn
  #         occurrences: [ 1, 1 ]
  #     - ca:
  #         capability: kubetos.capabilities.CertificateAuthority
  #         relationship: tosca.relationships.DependsOn
  #         occurrences: [ 1, 1 ]

  # kubetos.nodes.Kubernetes.ControllerManager.StaticPod:
  #   derived_from: kubetos.nodes.Kubernetes.StaticPod
  #   requirements:
  #     - apiserver:
  #         capability: tosca.capabilities.Endpoint
  #         relationship: tosca.relationships.ConnectsTo
  #         occurrences: [ 1, 1 ]

  # kubetos.nodes.Kubernetes.Scheduler.StaticPod:
  #   derived_from: kubetos.nodes.Kubernetes.StaticPod
  #   requirements:
  #     - apiserver:
  #         capability: tosca.capabilities.Endpoint
  #         relationship: tosca.relationships.ConnectsTo
  #         occurrences: [ 1, 1 ]

topology_template:

  inputs:

    kubernetes_version:
      type: version
      default: 1.21.0

    cluster_name:
      type: string
      default: kubernetes-cluster

    pod_cidr:
      type: string
      default: 10.233.0.0/16

    service_cidr:
      type: string
      default: 10.32.0.0/16

  node_templates:

    kube_apiserver_pod:
      type: kubetos.nodes.Kubernetes.APIServer.Pod
      capabilities:
        apiserver:
          properties:
            kubernetes_version: { get_input: [ kubernetes_version ] }
            service_cidr: { get_input: [ service_cidr ] }
      interfaces:
        Standard:
          operations:
            start:
              implementation:
                primary: artifacts/kubernetes/ansible/kube-apiserver--start.yaml
                dependencies:
                  - artifacts/kubernetes/ansible/files/kube-apiserver.yaml.j2
                operation_host: ORCHESTRATOR
              inputs:
                ca_cert_path: a
                cert_path: b
                key_path: c
                sa_cert_path: d
                sa_key_path: e
                kubelet_client_cert_path: f
                kubelet_client_key_path: g
                etcd_peers: ['joka', 'boka']
                kube_version: 'v1.2.3'
                private_address: '10.10.10.10'
                public_address: '100.100.100.100'
                service_cidr: '1.2.3.4/2'
                apiserver_count: 1
              outputs:
                manifest: [ SELF, manifest ]

  substitution_mappings:
    node_type: kubetos.nodes.Kubernetes.APIServer.Pod
    capabilities:
      apiserver: [ kube_apiserver_pod, apiserver ]
      access_address: [ kube_apiserver_pod, access_address ]
    requirements:
      host: [ kube_apiserver_pod, host ]
      etcd: [ kube_apiserver_pod, etcd ]
    # requirements:
    #   etcd: [ kube_apiserver_pod, network ]
