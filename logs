
parsing cluster.yaml...

please, fill inputs
cluster_name: dns_ip: kubernetes_version: pod_cidr: service_cidr: {'$information': {'type': {'name': 'string'}}, '$value': 'a'}
{'$information': {'type': {'name': 'string'}}, '$value': 'a'}
{'$information': {'type': {'name': 'string'}}, '$value': 'a'}
{'$information': {'type': {'name': 'string'}}, '$value': 'a'}
admin_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-admin'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:masters'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["admin_cert"].requirements{0}', 'row': 136, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["admin_cert"].capabilities["cert"]', 'row': 130, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["admin_cert"].capabilities["feature"]', 'row': 130, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-admin'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:masters'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
admin_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["admin_kubeconfig"].requirements{0}', 'row': 127, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'admin_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["admin_kubeconfig"].requirements{1}', 'row': 128, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["admin_kubeconfig"].capabilities["feature"]', 'row': 124, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
admin_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'admin_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["admin_user"].requirements{0}', 'row': 122, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["admin_user"].capabilities["feature"]', 'row': 117, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-admin'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["admin_user"].capabilities["user"]', 'row': 118, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-admin'}
apiserver
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kube.APIServer': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'component_version': {'$information': {'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 370, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].properties["component_version"]'}}, 'service_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'service_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 371, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].properties["service_cidr"]'}}}, 'attributes': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'ca_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 373, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["ca_cert_path"]'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kube_apiserver_cert_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 374, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["cert_path"]'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kube_apiserver_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 375, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["key_path"]'}}, 'kubelet_client_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kube_apiserver_client_cert_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 378, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["kubelet_client_cert_path"]'}}, 'kubelet_client_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kube_apiserver_client_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 379, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["kubelet_client_key_path"]'}}, 'sa_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'service_account_cert_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 376, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["sa_cert_path"]'}}, 'sa_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'service_account_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 377, 'column': 9, 'path': 'topology_template.node_templates["apiserver"].attributes["sa_key_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'kubetos.capabilities.Kubelet', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{0}', 'row': 381, 'column': 17}}, {'name': 'etcd', 'capabilityTypeName': 'tosca::Endpoint', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'etcd_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::ConnectsTo': {'description': 'This type represents a network connection relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.4', 'tosca.canonical-name': 'tosca::ConnectsTo', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{1}', 'row': 382, 'column': 17}}, {'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.pem'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{2}', 'row': 384, 'column': 13}}, {'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_apiserver_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/apiserver.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/apiserver.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{3}', 'row': 387, 'column': 13}}, {'name': 'kubelet_client_cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_apiserver_client_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/apiserver-kubelet-client.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/apiserver-kubelet-client.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{4}', 'row': 390, 'column': 13}}, {'name': 'service_account_cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'service_account_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/sa.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/sa.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["apiserver"].requirements{5}', 'row': 393, 'column': 13}}], 'capabilities': {'access_address': {'description': '', 'types': {'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'port': {'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 368, 'column': 13, 'path': 'topology_template.node_templates["apiserver"].capabilities["access_address"].properties["port"]'}}], '$value': 6443}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["apiserver"].capabilities["access_address"]', 'row': 366, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["apiserver"].capabilities["feature"]', 'row': 365, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'apiserver_count': {'$information': {'type': {'name': 'integer'}}, '$value': 1}, 'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 299, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["ca_cert_path"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 302, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["cert_path"].value'}}, 'etcd_peers': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'etcd'}, {'$value': 'peers'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 320, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["etcd_peers"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 305, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["key_path"].value'}}, 'kube_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 325, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["kube_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 325, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["kube_version"].value'}}, 'kubelet_client_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubelet_client_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 314, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["kubelet_client_cert_path"].value'}}, 'kubelet_client_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubelet_client_key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 317, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["kubelet_client_key_path"].value'}}, 'private_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 328, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["private_address"].value'}}, 'public_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'host'}, {'$value': 'public_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 331, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["public_address"].value'}}, 'sa_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'sa_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 308, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["sa_cert_path"].value'}}, 'sa_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'sa_key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 311, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["sa_key_path"].value'}}, 'service_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'service_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 337, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["service_cidr"].value'}}, 'static_pod_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'kubelet'}, {'$value': 'static_pod_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 334, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.APIServer"].interfaces["Standard"].inputs["static_pod_path"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kube-apiserver--start.yaml', 'dependencies': ['ansible/files/kube-apiserver.yaml.j2'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 368, 'column': 13, 'path': 'topology_template.node_templates["apiserver"].capabilities["access_address"].properties["port"]'}}], '$value': 6443}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
cni
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CNI': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.0.1', '$originalString': '1.0.1', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 0, 'fix': 1, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["cni"].requirements{0}', 'row': 579, 'column': 17}}], 'capabilities': {'cni': {'description': '', 'types': {'kubetos.capabilities.CNI': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'binary_dir': {'$information': {'type': {'name': 'string'}}, '$value': '/opt/cni/bin'}, 'config_dir': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/cni/net.d'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["cni"].capabilities["cni"]', 'row': 574, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["cni"].capabilities["feature"]', 'row': 573, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/cni--create.yaml', 'dependencies': ['cni_role', 'download_role'], 'inputs': {'cni_binary_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'binary_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 31, 'column': 33, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_binary_dir"].value'}}, 'cni_config_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'config_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 32, 'column': 33, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_config_dir"].value'}}, 'cni_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 34, 'column': 17, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 34, 'column': 17, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_version"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': '/opt/cni/bin'}
{'$information': {'type': {'name': 'string'}}, '$value': '/etc/cni/net.d'}
cni_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CNI': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.0.1', '$originalString': '1.0.1', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 0, 'fix': 1, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["cni_worker"].requirements{0}', 'row': 261, 'column': 17}}], 'capabilities': {'cni': {'description': '', 'types': {'kubetos.capabilities.CNI': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'binary_dir': {'$information': {'type': {'name': 'string'}}, '$value': '/opt/cni/bin'}, 'config_dir': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/cni/net.d'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["cni_worker"].capabilities["cni"]', 'row': 256, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["cni_worker"].capabilities["feature"]', 'row': 255, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/cni--create.yaml', 'dependencies': ['cni_role', 'download_role'], 'inputs': {'cni_binary_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'binary_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 31, 'column': 33, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_binary_dir"].value'}}, 'cni_config_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'config_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 32, 'column': 33, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_config_dir"].value'}}, 'cni_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 34, 'column': 17, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cni/main.yaml', 'row': 34, 'column': 17, 'path': 'node_types["kubetos.nodes.CNI"].interfaces["Standard"].operations["create"].inputs["cni_version"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': '/opt/cni/bin'}
{'$information': {'type': {'name': 'string'}}, '$value': '/etc/cni/net.d'}
compute
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.Compute': {'parent': 'tosca::Compute'}, 'tosca::Abstract.Compute': {'description': 'The TOSCA Abstract.Compute node represents an abstract compute resource without any requirements on storage or network resources.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.2', 'tosca.canonical-name': 'tosca::Abstract.Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Compute': {'description': 'The TOSCA Compute node represents one or more real or virtual processors of software applications or services along with other essential local resources. Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) "server".', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.3', 'tosca.canonical-name': 'tosca::Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Abstract.Compute'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'flavor': {'$information': {'type': {'name': 'string'}}, '$value': 'Memory2.small.s50'}, 'floating_ip_pool': {'$information': {'type': {'name': 'string'}}, '$value': 'ispras'}, 'image': {'$information': {'type': {'name': 'string'}}, '$value': 'Ubuntu Server 20.04 LTS (Focal Fossa)'}, 'key_name': {'$information': {'type': {'name': 'string'}}, '$value': 'shishqa'}, 'name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubetos--control-plane'}, 'network': {'$information': {'type': {'name': 'string'}}, '$value': 'net-for-intra-sandbox'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'networks': {'$information': {'definition': {'description': 'The list of logical networks assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}, 'ports': {'$information': {'definition': {'description': 'The list of logical ports assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}, 'private_address': {'$information': {'definition': {'description': 'The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}, 'public_address': {'$information': {'definition': {'description': 'The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}, 'security_groups': {'$information': {'type': {'name': 'list'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'security_group', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'openstack.nodes.SecurityGroup', 'nodeTemplateName': 'sg', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'openstack.relationships.ComputeToSecurityGroup': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'security_groups'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 16, 'column': 17, 'path': 'relationship_types["openstack.relationships.ComputeToSecurityGroup"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 13, 'column': 17, 'path': 'relationship_types["openstack.relationships.ComputeToSecurityGroup"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["compute"].requirements{0}', 'row': 591, 'column': 27}}], 'capabilities': {'binding': {'description': '', 'types': {'tosca::Bindable': {'description': 'A node type that includes the Bindable capability indicates that it can be bound to a logical network association via a network port.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.14', 'tosca.canonical-name': 'tosca::Bindable', 'tosca.normative': 'true'}, 'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["binding"]', 'row': 581, 'column': 5}}, 'endpoint': {'description': '', 'types': {'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Endpoint.Admin': {'description': 'This is the default TOSCA type that should be used or extended to define a specialized administrator endpoint capability.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.9', 'tosca.canonical-name': 'tosca::Endpoint.Admin', 'tosca.normative': 'true'}, 'parent': 'tosca::Endpoint'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': True}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 239, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint.Admin"].properties["secure"].default'}}], '$value': True}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["endpoint"]', 'row': 581, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["feature"]', 'row': 581, 'column': 5}}, 'host': {'description': '', 'types': {'tosca::Compute': {'description': 'The Compute capability, when included on a Node Type or Template definition, indicates that the node can provide hosting on a named compute resource.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.3', 'tosca.canonical-name': 'tosca::Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Container'}, 'tosca::Container': {'description': 'The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.6', 'tosca.canonical-name': 'tosca::Container', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["host"]', 'row': 581, 'column': 5}}, 'os': {'description': '', 'types': {'tosca::OperatingSystem': {'description': 'This is the default TOSCA type that should be used to express an Operating System capability for a node.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.12', 'tosca.canonical-name': 'tosca::OperatingSystem', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["os"]', 'row': 581, 'column': 5}}, 'scalable': {'description': '', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Scalable': {'description': 'This is the default TOSCA type that should be used to express a scalability capability for a node.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.13', 'tosca.canonical-name': 'tosca::Scalable', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'properties': {'max_instances': {'$information': {'definition': {'description': 'This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}, 'min_instances': {'$information': {'definition': {'description': 'This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute"].capabilities["scalable"]', 'row': 581, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/compute--create.yaml', 'dependencies': [], 'inputs': {'compute_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 108, 'column': 31, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["compute_name"].value'}}, 'flavor': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'flavor'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 110, 'column': 25, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["flavor"].value'}}, 'floating_ip_pool': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'floating_ip_pool'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 112, 'column': 35, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["floating_ip_pool"].value'}}, 'image': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'image'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 109, 'column': 24, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["image"].value'}}, 'key_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 113, 'column': 27, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["key_name"].value'}}, 'network': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'network'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 111, 'column': 26, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["network"].value'}}, 'security_groups': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'security_groups'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 115, 'column': 17, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["security_groups"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'Memory2.small.s50'}
{'$information': {'type': {'name': 'string'}}, '$value': 'ispras'}
{'$information': {'type': {'name': 'string'}}, '$value': 'Ubuntu Server 20.04 LTS (Focal Fossa)'}
{'$information': {'type': {'name': 'string'}}, '$value': 'shishqa'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubetos--control-plane'}
{'$information': {'type': {'name': 'string'}}, '$value': 'net-for-intra-sandbox'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The list of logical networks assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}
{'$information': {'definition': {'description': 'The list of logical ports assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}
{'$information': {'definition': {'description': 'The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'list'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': True}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 239, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint.Admin"].properties["secure"].default'}}], '$value': True}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}
{'$information': {'definition': {'description': 'This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}
compute_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.Compute': {'parent': 'tosca::Compute'}, 'tosca::Abstract.Compute': {'description': 'The TOSCA Abstract.Compute node represents an abstract compute resource without any requirements on storage or network resources.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.2', 'tosca.canonical-name': 'tosca::Abstract.Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Compute': {'description': 'The TOSCA Compute node represents one or more real or virtual processors of software applications or services along with other essential local resources. Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) "server".', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.3', 'tosca.canonical-name': 'tosca::Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Abstract.Compute'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'flavor': {'$information': {'type': {'name': 'string'}}, '$value': 'Memory2.small.s50'}, 'floating_ip_pool': {'$information': {'type': {'name': 'string'}}, '$value': 'ispras'}, 'image': {'$information': {'type': {'name': 'string'}}, '$value': 'Ubuntu Server 20.04 LTS (Focal Fossa)'}, 'key_name': {'$information': {'type': {'name': 'string'}}, '$value': 'shishqa'}, 'name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubetos--worker'}, 'network': {'$information': {'type': {'name': 'string'}}, '$value': 'net-for-intra-sandbox'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'networks': {'$information': {'definition': {'description': 'The list of logical networks assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}, 'ports': {'$information': {'definition': {'description': 'The list of logical ports assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}, 'private_address': {'$information': {'definition': {'description': 'The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}, 'public_address': {'$information': {'definition': {'description': 'The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}, 'security_groups': {'$information': {'type': {'name': 'list'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'security_group', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'openstack.nodes.SecurityGroup', 'nodeTemplateName': 'sg', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'openstack.relationships.ComputeToSecurityGroup': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'security_groups'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 16, 'column': 17, 'path': 'relationship_types["openstack.relationships.ComputeToSecurityGroup"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 13, 'column': 17, 'path': 'relationship_types["openstack.relationships.ComputeToSecurityGroup"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["compute_worker"].requirements{0}', 'row': 273, 'column': 27}}], 'capabilities': {'binding': {'description': '', 'types': {'tosca::Bindable': {'description': 'A node type that includes the Bindable capability indicates that it can be bound to a logical network association via a network port.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.14', 'tosca.canonical-name': 'tosca::Bindable', 'tosca.normative': 'true'}, 'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["binding"]', 'row': 263, 'column': 5}}, 'endpoint': {'description': '', 'types': {'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Endpoint.Admin': {'description': 'This is the default TOSCA type that should be used or extended to define a specialized administrator endpoint capability.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.9', 'tosca.canonical-name': 'tosca::Endpoint.Admin', 'tosca.normative': 'true'}, 'parent': 'tosca::Endpoint'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': True}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 239, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint.Admin"].properties["secure"].default'}}], '$value': True}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["endpoint"]', 'row': 263, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["feature"]', 'row': 263, 'column': 5}}, 'host': {'description': '', 'types': {'tosca::Compute': {'description': 'The Compute capability, when included on a Node Type or Template definition, indicates that the node can provide hosting on a named compute resource.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.3', 'tosca.canonical-name': 'tosca::Compute', 'tosca.normative': 'true'}, 'parent': 'tosca::Container'}, 'tosca::Container': {'description': 'The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.6', 'tosca.canonical-name': 'tosca::Container', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["host"]', 'row': 263, 'column': 5}}, 'os': {'description': '', 'types': {'tosca::OperatingSystem': {'description': 'This is the default TOSCA type that should be used to express an Operating System capability for a node.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.12', 'tosca.canonical-name': 'tosca::OperatingSystem', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["os"]', 'row': 263, 'column': 5}}, 'scalable': {'description': '', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Scalable': {'description': 'This is the default TOSCA type that should be used to express a scalability capability for a node.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.13', 'tosca.canonical-name': 'tosca::Scalable', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'properties': {'max_instances': {'$information': {'definition': {'description': 'This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}, 'min_instances': {'$information': {'definition': {'description': 'This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["compute_worker"].capabilities["scalable"]', 'row': 263, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/compute--create.yaml', 'dependencies': [], 'inputs': {'compute_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 108, 'column': 31, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["compute_name"].value'}}, 'flavor': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'flavor'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 110, 'column': 25, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["flavor"].value'}}, 'floating_ip_pool': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'floating_ip_pool'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 112, 'column': 35, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["floating_ip_pool"].value'}}, 'image': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'image'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 109, 'column': 24, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["image"].value'}}, 'key_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 113, 'column': 27, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["key_name"].value'}}, 'network': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'network'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 111, 'column': 26, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["network"].value'}}, 'security_groups': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'security_groups'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 115, 'column': 17, 'path': 'node_types["openstack.nodes.Compute"].interfaces["Standard"].operations["configure"].inputs["security_groups"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'Memory2.small.s50'}
{'$information': {'type': {'name': 'string'}}, '$value': 'ispras'}
{'$information': {'type': {'name': 'string'}}, '$value': 'Ubuntu Server 20.04 LTS (Focal Fossa)'}
{'$information': {'type': {'name': 'string'}}, '$value': 'shishqa'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubetos--worker'}
{'$information': {'type': {'name': 'string'}}, '$value': 'net-for-intra-sandbox'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The list of logical networks assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}
{'$information': {'definition': {'description': 'The list of logical ports assigned to the compute host instance and information about them.'}, 'type': {'name': 'map'}}, '$value': None}
{'$information': {'definition': {'description': 'The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'list'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': True}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 239, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint.Admin"].properties["secure"].default'}}], '$value': True}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}
{'$information': {'definition': {'description': 'This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.'}, 'type': {'name': 'integer'}}, '$value': 1}
controller_manager
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kube.ControllerManager': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'cluster_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 319, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].properties["cluster_cidr"]'}}, 'component_version': {'$information': {'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 318, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].properties["component_version"]'}}, 'service_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'service_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 320, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].properties["service_cidr"]'}}}, 'attributes': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'ca_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 323, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].attributes["ca_cert_path"]'}}, 'ca_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'ca_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 324, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].attributes["ca_key_path"]'}}, 'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'controller_manager_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 322, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].attributes["kubeconfig_path"]'}}, 'sa_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'service_account_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 325, 'column': 9, 'path': 'topology_template.node_templates["controller_manager"].attributes["sa_key_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'kubetos.capabilities.Kubelet', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager"].requirements{0}', 'row': 327, 'column': 17}}, {'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.pem'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager"].requirements{1}', 'row': 329, 'column': 13}}, {'name': 'service_account_cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'service_account_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/sa.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/sa.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager"].requirements{2}', 'row': 332, 'column': 13}}, {'name': 'kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'controller_manager_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/controller-manager.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager"].requirements{3}', 'row': 335, 'column': 13}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["controller_manager"].capabilities["feature"]', 'row': 315, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 431, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["ca_cert_path"].value'}}, 'ca_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca_key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 434, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["ca_key_path"].value'}}, 'cluster_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 428, 'column': 27, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["cluster_cidr"].value'}}, 'kube_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 425, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["kube_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 425, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["kube_version"].value'}}, 'sa_key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'sa_key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 437, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["sa_key_path"].value'}}, 'service_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'service_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 429, 'column': 27, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["service_cidr"].value'}}, 'static_pod_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'kubelet'}, {'$value': 'static_pod_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 427, 'column': 30, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].inputs["static_pod_path"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kube-controller-manager--start.yaml', 'dependencies': ['ansible/files/kube-controller-manager.yaml.j2'], 'inputs': {'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 442, 'column': 34, 'path': 'node_types["kubetos.nodes.Kube.ControllerManager"].interfaces["Standard"].operations["start"].inputs["kubeconfig_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
controller_manager_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_local_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager_kubeconfig"].requirements{0}', 'row': 350, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'controller_manager_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager_kubeconfig"].requirements{1}', 'row': 351, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["controller_manager_kubeconfig"].capabilities["feature"]', 'row': 347, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
controller_manager_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_controller_manager_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["controller_manager_user"].requirements{0}', 'row': 345, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["controller_manager_user"].capabilities["feature"]', 'row': 340, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-controller-manager'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["controller_manager_user"].capabilities["user"]', 'row': 341, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-controller-manager'}
coredns
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CoreDNS': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'component_version': {'$information': {'type': {'name': 'version'}}, '$value': {'$string': '1.9.2', '$originalString': '1.9.2', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 9, 'fix': 2, 'qualifier': '', 'build': 0}}}, 'attributes': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'admin_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 58, 'column': 9, 'path': 'topology_template.node_templates["coredns"].attributes["deploy_kubeconfig_path"]'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 57, 'column': 9, 'path': 'topology_template.node_templates["coredns"].attributes["dns_ip"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'kubectl', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubectl', 'nodeTemplateName': 'kubectl', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["coredns"].requirements{0}', 'row': 60, 'column': 20}}, {'name': 'deploy_kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'admin_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/admin.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["coredns"].requirements{1}', 'row': 62, 'column': 13}}, {'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'flannel', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["coredns"].requirements{2}', 'row': 64, 'column': 23}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["coredns"].capabilities["feature"]', 'row': 54, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'coredns_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 75, 'column': 13, 'path': 'node_types["kubetos.nodes.CoreDNS"].interfaces["Standard"].inputs["coredns_version"].value'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 78, 'column': 13, 'path': 'node_types["kubetos.nodes.CoreDNS"].interfaces["Standard"].inputs["dns_ip"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/coredns--start.yaml', 'dependencies': [], 'inputs': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'deploy_kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 83, 'column': 41, 'path': 'node_types["kubetos.nodes.CoreDNS"].interfaces["Standard"].operations["start"].inputs["deploy_kubeconfig_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
crictl
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Crictl': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 530, 'column': 9, 'path': 'topology_template.node_templates["crictl"].properties["component_version"]'}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crictl"].requirements{0}', 'row': 532, 'column': 17}}, {'name': 'cri_runtime', 'capabilityTypeName': 'kubetos.capabilities.CRI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'crio', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::ConnectsTo': {'description': 'This type represents a network connection relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.4', 'tosca.canonical-name': 'tosca::ConnectsTo', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crictl"].requirements{1}', 'row': 533, 'column': 24}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crictl"].capabilities["feature"]', 'row': 527, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/crictl--create.yaml', 'dependencies': ['crictl_role', 'download_role'], 'inputs': {'cri_socket': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cri_runtime'}, {'$value': 'cri'}, {'$value': 'url_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 178, 'column': 29, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["cri_socket"].value'}}, 'crictl_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 176, 'column': 17, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["crictl_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 176, 'column': 17, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["crictl_version"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
crictl_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Crictl': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 212, 'column': 9, 'path': 'topology_template.node_templates["crictl_worker"].properties["component_version"]'}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crictl_worker"].requirements{0}', 'row': 214, 'column': 17}}, {'name': 'cri_runtime', 'capabilityTypeName': 'kubetos.capabilities.CRI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'crio_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::ConnectsTo': {'description': 'This type represents a network connection relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.4', 'tosca.canonical-name': 'tosca::ConnectsTo', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crictl_worker"].requirements{1}', 'row': 215, 'column': 24}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crictl_worker"].capabilities["feature"]', 'row': 209, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/crictl--create.yaml', 'dependencies': ['crictl_role', 'download_role'], 'inputs': {'cri_socket': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cri_runtime'}, {'$value': 'cri'}, {'$value': 'url_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 178, 'column': 29, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["cri_socket"].value'}}, 'crictl_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 176, 'column': 17, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["crictl_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 176, 'column': 17, 'path': 'node_types["kubetos.nodes.Crictl"].interfaces["Standard"].operations["create"].inputs["crictl_version"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
crio
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CRI-O': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.21', '$originalString': '1.21', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 21, 'fix': 0, 'qualifier': '', 'build': 0}}}, 'attributes': {'runtimes': {'$information': {'type': {'name': 'list'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio"].requirements{0}', 'row': 542, 'column': 17}}, {'name': 'oci_runtime', 'capabilityTypeName': 'kubetos.capabilities.OCI.Plugin', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'runc', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.OCI.Plugin.CRI-O': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 46, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'oci'}, {'$value': 'spec'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 51, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio"].requirements{1}', 'row': 543, 'column': 24}}, {'name': 'oci_runtime', 'capabilityTypeName': 'kubetos.capabilities.OCI.Plugin', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kata', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.OCI.Plugin.CRI-O': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 46, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'oci'}, {'$value': 'spec'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 51, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio"].requirements{2}', 'row': 544, 'column': 24}}, {'name': 'cni', 'capabilityTypeName': 'kubetos.capabilities.CNI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'cni', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio"].requirements{3}', 'row': 545, 'column': 16}}], 'capabilities': {'cri': {'description': '', 'types': {'kubetos.capabilities.CRI': {'parent': 'tosca::Endpoint'}, 'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': 'rpc'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 31, 'column': 9, 'path': 'capability_types["kubetos.capabilities.CRI"].properties["protocol"].default'}}], '$value': 'rpc'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}, 'url_path': {'$information': {'definition': {'description': "The optional URL path of the endpoint's address if applicable for the protocol."}, 'type': {'name': 'string'}}, '$value': '/var/run/crio/crio.sock'}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crio"].capabilities["cri"]', 'row': 538, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crio"].capabilities["feature"]', 'row': 537, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'crio_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 138, 'column': 27, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].inputs["crio_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/cri-o--configure.yaml', 'dependencies': ['crio_role'], 'inputs': {'cni_bin_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'binary_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 147, 'column': 30, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["cni_bin_dir"].value'}}, 'cni_conf_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'config_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 148, 'column': 31, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["cni_conf_dir"].value'}}, 'crio_runtimes': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 143, 'column': 17, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["crio_runtimes"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'list'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': 'rpc'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 31, 'column': 9, 'path': 'capability_types["kubetos.capabilities.CRI"].properties["protocol"].default'}}], '$value': 'rpc'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}
{'$information': {'definition': {'description': "The optional URL path of the endpoint's address if applicable for the protocol."}, 'type': {'name': 'string'}}, '$value': '/var/run/crio/crio.sock'}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
crio_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CRI-O': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.21', '$originalString': '1.21', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 21, 'fix': 0, 'qualifier': '', 'build': 0}}}, 'attributes': {'runtimes': {'$information': {'type': {'name': 'list'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio_worker"].requirements{0}', 'row': 224, 'column': 17}}, {'name': 'oci_runtime', 'capabilityTypeName': 'kubetos.capabilities.OCI.Plugin', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'runc_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.OCI.Plugin.CRI-O': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 46, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'oci'}, {'$value': 'spec'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 51, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio_worker"].requirements{1}', 'row': 225, 'column': 24}}, {'name': 'oci_runtime', 'capabilityTypeName': 'kubetos.capabilities.OCI.Plugin', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kata_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.OCI.Plugin.CRI-O': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 46, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'TARGET'}, {'$value': 'oci'}, {'$value': 'spec'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 51, 'column': 17, 'path': 'relationship_types["kubetos.relationships.OCI.Plugin.CRI-O"].interfaces["Configure"].operations["pre_configure_source"].inputs["new_item"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio_worker"].requirements{2}', 'row': 226, 'column': 24}}, {'name': 'cni', 'capabilityTypeName': 'kubetos.capabilities.CNI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'cni_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["crio_worker"].requirements{3}', 'row': 227, 'column': 16}}], 'capabilities': {'cri': {'description': '', 'types': {'kubetos.capabilities.CRI': {'parent': 'tosca::Endpoint'}, 'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': 'rpc'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 31, 'column': 9, 'path': 'capability_types["kubetos.capabilities.CRI"].properties["protocol"].default'}}], '$value': 'rpc'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}, 'url_path': {'$information': {'definition': {'description': "The optional URL path of the endpoint's address if applicable for the protocol."}, 'type': {'name': 'string'}}, '$value': '/var/run/crio/crio.sock'}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crio_worker"].capabilities["cri"]', 'row': 220, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["crio_worker"].capabilities["feature"]', 'row': 219, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'crio_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 138, 'column': 27, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].inputs["crio_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/cri-o--configure.yaml', 'dependencies': ['crio_role'], 'inputs': {'cni_bin_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'binary_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 147, 'column': 30, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["cni_bin_dir"].value'}}, 'cni_conf_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'config_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 148, 'column': 31, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["cni_conf_dir"].value'}}, 'crio_runtimes': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'runtimes'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 143, 'column': 17, 'path': 'node_types["kubetos.nodes.CRI-O"].interfaces["Standard"].operations["configure"].inputs["crio_runtimes"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'list'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.equal', 'arguments': [{'$value': 'rpc'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 31, 'column': 9, 'path': 'capability_types["kubetos.capabilities.CRI"].properties["protocol"].default'}}], '$value': 'rpc'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}
{'$information': {'definition': {'description': "The optional URL path of the endpoint's address if applicable for the protocol."}, 'type': {'name': 'string'}}, '$value': '/var/run/crio/crio.sock'}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
etcd
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Etcd': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'backup_retention_count': {'$information': {'type': {'name': 'integer'}}, '$value': -1}, 'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '3.4.13', '$originalString': '3.4.13', '$comparer': 'tosca.comparer.version', 'major': 3, 'minor': 4, 'fix': 13, 'qualifier': '', 'build': 0}}, 'election_timeout': {'$information': {'type': {'name': 'scalar-unit.time'}}, '$value': {'$string': '5 s', '$number': 5, '$originalString': '5000 ms', 'scalar': 5000, 'unit': 'ms'}}, 'heartbeat_interval': {'$information': {'type': {'name': 'scalar-unit.time'}}, '$value': {'$string': '0.25 s', '$number': 0.25, '$originalString': '250 ms', 'scalar': 250, 'unit': 'ms'}}, 'max_snapshots': {'$information': {'type': {'name': 'integer'}}, '$value': 0}, 'max_wals': {'$information': {'type': {'name': 'integer'}}, '$value': 0}, 'quota_backend_bytes': {'$information': {'type': {'name': 'scalar-unit.size'}}, '$value': {'$string': '2147483648 B', '$number': 2147483648, '$originalString': '2147483648 B', 'scalar': 2147483648.0, 'unit': 'B'}}, 'snapshot_count': {'$information': {'type': {'name': 'integer'}}, '$value': 10000}}, 'attributes': {'name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'tosca_id'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 87, 'column': 9, 'path': 'node_types["kubetos.nodes.Etcd"].attributes["name"].default'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["etcd"].requirements{0}', 'row': 519, 'column': 17}}, {'name': 'cluster', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Etcd.Cluster', 'nodeTemplateName': 'etcd_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.EtcdPeer': {'parent': 'tosca::ConnectsTo'}, 'tosca::ConnectsTo': {'description': 'This type represents a network connection relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.4', 'tosca.canonical-name': 'tosca::ConnectsTo', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '../../utils/add-to-list.yaml', 'dependencies': [], 'inputs': {'list': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'peers'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 51, 'column': 17, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["list"].value'}}, 'new_item': {'$information': {'type': {'name': 'kubetos.datatypes.Etcd.PeerSpec'}, 'fields': {'access_address': {'type': {'name': 'string'}}, 'access_port': {'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, 'name': {'type': {'name': 'string'}}, 'peer_address': {'type': {'name': 'string'}}, 'peer_port': {'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}}}, '$map': [{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 57, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["name"]'}}, {'$key': {'$value': 'access_address'}, '$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 58, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["access_address"]'}}, {'$key': {'$value': 'access_port'}, '$information': {'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 59, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["access_port"]'}}], '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'access_address'}, {'$value': 'port'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 59, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["access_port"]'}}, {'$key': {'$value': 'peer_address'}, '$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 60, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["peer_address"]'}}, {'$key': {'$value': 'peer_port'}, '$information': {'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 61, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["peer_port"]'}}], '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SOURCE'}, {'$value': 'peer_address'}, {'$value': 'port'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 61, 'column': 19, 'path': 'relationship_types["kubetos.relationships.EtcdPeer"].interfaces["Configure"].operations["pre_configure_target"].inputs["new_item"].value["peer_port"]'}}]}}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["etcd"].requirements{1}', 'row': 520, 'column': 20}}], 'capabilities': {'access_address': {'description': '', 'types': {'kubetos.capabilities.Etcd.Endpoint.Access': {'parent': 'tosca::Endpoint'}, 'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'api_version': {'$information': {'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'v1'}, {'$value': 'v2'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 514, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["access_address"].properties["api_version"]'}}], '$value': 'v2'}, 'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'port': {'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 513, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["access_address"].properties["port"]'}}], '$value': 2379}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["etcd"].capabilities["access_address"]', 'row': 511, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["etcd"].capabilities["feature"]', 'row': 510, 'column': 7}}, 'peer_address': {'description': '', 'types': {'kubetos.capabilities.Etcd.Endpoint.Peer': {'parent': 'tosca::Endpoint'}, 'tosca::Endpoint': {'description': 'This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.7', 'tosca.canonical-name': 'tosca::Endpoint', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'initiator': {'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}, 'network_name': {'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}, 'port': {'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 517, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["peer_address"].properties["port"]'}}], '$value': 2380}, 'protocol': {'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}, 'secure': {'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}}, 'attributes': {'ip_address': {'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["etcd"].capabilities["peer_address"]', 'row': 515, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'etcd_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 123, 'column': 13, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].inputs["etcd_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 123, 'column': 13, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].inputs["etcd_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/etcd--configure.yaml', 'dependencies': ['etcd_role'], 'inputs': {'etcd_access_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 136, 'column': 38, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_access_address"].value'}}, 'etcd_access_port': {'$information': {'type': {'name': 'integer'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'access_address'}, {'$value': 'port'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 137, 'column': 35, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_access_port"].value'}}, 'etcd_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 134, 'column': 31, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_address"].value'}}, 'etcd_member_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 138, 'column': 35, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_member_name"].value'}}, 'etcd_peer_port': {'$information': {'type': {'name': 'integer'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'peer_address'}, {'$value': 'port'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 135, 'column': 33, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_peer_port"].value'}}, 'etcd_peers': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'peers'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/etcd/main.yaml', 'row': 140, 'column': 17, 'path': 'node_types["kubetos.nodes.Etcd"].interfaces["Standard"].operations["configure"].inputs["etcd_peers"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/etcd--create.yaml', 'dependencies': ['etcd_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/etcd--start.yaml', 'dependencies': ['etcd_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'integer'}}, '$value': -1}
{'$information': {'type': {'name': 'integer'}}, '$value': 0}
{'$information': {'type': {'name': 'integer'}}, '$value': 0}
{'$information': {'type': {'name': 'integer'}}, '$value': 10000}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'v1'}, {'$value': 'v2'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 514, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["access_address"].properties["api_version"]'}}], '$value': 'v2'}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 513, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["access_address"].properties["port"]'}}], '$value': 2379}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The optional indicator of the direction of the connection.'}, 'type': {'name': 'string'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.valid_values', 'arguments': [{'$value': 'source'}, {'$value': 'target'}, {'$value': 'peer'}], 'url': 'internal:/tosca/simple/1.3/capabilities.yaml', 'row': 170, 'column': 9, 'path': 'capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default'}}], '$value': 'source'}
{'$information': {'definition': {'description': 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'}, 'type': {'name': 'string'}}, '$value': 'PRIVATE'}
{'$information': {'definition': {'description': 'The optional port of the endpoint.'}, 'type': {'name': 'tosca::PortDef', 'description': 'The PortDef type is a TOSCA data Type used to define a network port.'}}, '$constraints': [{'$functionCall': {'name': 'tosca.constraint.in_range', 'arguments': [{'$value': 1}, {'$value': 65535}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 517, 'column': 13, 'path': 'topology_template.node_templates["etcd"].capabilities["peer_address"].properties["port"]'}}], '$value': 2380}
{'$information': {'definition': {'description': 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'}, 'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'definition': {'description': 'Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.'}, 'type': {'name': 'boolean'}}, '$value': False}
{'$information': {'definition': {'description': "Note: This is the IP address as propagated up by the associated node's host (Compute) container."}, 'type': {'name': 'string'}}, '$value': None}
etcd_cluster
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Etcd.Cluster': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'peers': {'$information': {'type': {'name': 'list'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["etcd_cluster"].requirements{0}', 'row': 525, 'column': 23}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["etcd_cluster"].capabilities["feature"]', 'row': 522, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'list'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
flannel
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Flannel': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'component_version': {'$information': {'type': {'name': 'version'}}, '$value': {'$string': '0.17.0', '$originalString': '0.17.0', '$comparer': 'tosca.comparer.version', 'major': 0, 'minor': 17, 'fix': 0, 'qualifier': '', 'build': 0}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 44, 'column': 9, 'path': 'topology_template.node_templates["flannel"].properties["pod_cidr"]'}}}, 'attributes': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'admin_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 46, 'column': 9, 'path': 'topology_template.node_templates["flannel"].attributes["deploy_kubeconfig_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'kubectl', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubectl', 'nodeTemplateName': 'kubectl', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["flannel"].requirements{0}', 'row': 48, 'column': 20}}, {'name': 'deploy_kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'admin_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/admin.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["flannel"].requirements{1}', 'row': 50, 'column': 13}}, {'name': 'cni', 'capabilityTypeName': 'kubetos.capabilities.CNI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'cni', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["flannel"].requirements{2}', 'row': 52, 'column': 16}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["flannel"].capabilities["feature"]', 'row': 41, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'cni_bin_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'binary_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 124, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["cni_bin_dir"].value'}}, 'cni_conf_dir': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'cni'}, {'$value': 'config_dir'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 127, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["cni_conf_dir"].value'}}, 'cni_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cni'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 121, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["cni_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 121, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["cni_version"].value'}}, 'flannel_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 115, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["flannel_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 115, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["flannel_version"].value'}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 118, 'column': 13, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].inputs["pod_cidr"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/flannel--start.yaml', 'dependencies': [], 'inputs': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'deploy_kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 132, 'column': 41, 'path': 'node_types["kubetos.nodes.Flannel"].interfaces["Standard"].operations["start"].inputs["deploy_kubeconfig_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kata
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kata': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '2.1.0', '$originalString': '2.1.0', '$comparer': 'tosca.comparer.version', 'major': 2, 'minor': 1, 'fix': 0, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kata"].requirements{0}', 'row': 569, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kata"].capabilities["feature"]', 'row': 561, 'column': 7}}, 'oci': {'description': '', 'types': {'kubetos.capabilities.OCI.Plugin': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'spec': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}, 'fields': {'name': {'type': {'name': 'string'}}, 'path': {'type': {'name': 'string'}}, 'root': {'type': {'name': 'string'}}}}, '$map': [{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'kata'}, {'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/opt/kata/bin/kata-runtime'}, {'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/kata-containers'}]}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kata"].capabilities["oci"]', 'row': 562, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'kata_containers_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 89, 'column': 13, 'path': 'node_types["kubetos.nodes.Kata"].interfaces["Standard"].inputs["kata_containers_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/kata--configure.yaml', 'dependencies': ['kata_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kata--create.yaml', 'dependencies': ['kata_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'kata'}
{'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/opt/kata/bin/kata-runtime'}
{'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/kata-containers'}
kata_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kata': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '2.1.0', '$originalString': '2.1.0', '$comparer': 'tosca.comparer.version', 'major': 2, 'minor': 1, 'fix': 0, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kata_worker"].requirements{0}', 'row': 251, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kata_worker"].capabilities["feature"]', 'row': 243, 'column': 7}}, 'oci': {'description': '', 'types': {'kubetos.capabilities.OCI.Plugin': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'spec': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}, 'fields': {'name': {'type': {'name': 'string'}}, 'path': {'type': {'name': 'string'}}, 'root': {'type': {'name': 'string'}}}}, '$map': [{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'kata'}, {'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/opt/kata/bin/kata-runtime'}, {'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/kata-containers'}]}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kata_worker"].capabilities["oci"]', 'row': 244, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'kata_containers_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 89, 'column': 13, 'path': 'node_types["kubetos.nodes.Kata"].interfaces["Standard"].inputs["kata_containers_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/kata--configure.yaml', 'dependencies': ['kata_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kata--create.yaml', 'dependencies': ['kata_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'kata'}
{'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/opt/kata/bin/kata-runtime'}
{'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/kata-containers'}
kube_apiserver_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': [{'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 402, 'column': 13, 'path': 'topology_template.node_templates["kube_apiserver_cert"].properties["hostnames"][0]'}}, {'$value': '10.32.0.1'}, {'$value': '127.0.0.1'}]}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_apiserver_cert"].requirements{0}', 'row': 409, 'column': 15}}, {'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_apiserver_cert"].requirements{1}', 'row': 410, 'column': 23}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_apiserver_cert"].capabilities["cert"]', 'row': 396, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_apiserver_cert"].capabilities["feature"]', 'row': 396, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}
{'$value': '10.32.0.1'}
{'$value': '127.0.0.1'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_apiserver_client_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:masters'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_apiserver_client_cert"].requirements{0}', 'row': 418, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_apiserver_client_cert"].capabilities["cert"]', 'row': 412, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_apiserver_client_cert"].capabilities["feature"]', 'row': 412, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:masters'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_cluster
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.Cluster': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'apiserver'}, {'$value': 'host'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 76, 'column': 9, 'path': 'node_types["kubetos.nodes.Kubernetes.Cluster"].attributes["apiserver_address"].default'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_cluster"].requirements{0}', 'row': 112, 'column': 15}}, {'name': 'apiserver', 'capabilityTypeName': 'tosca::Endpoint', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'apiserver', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::ConnectsTo': {'description': 'This type represents a network connection relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.4', 'tosca.canonical-name': 'tosca::ConnectsTo', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_cluster"].requirements{1}', 'row': 113, 'column': 22}}], 'capabilities': {'cluster': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.Cluster': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-cluster'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_cluster"].capabilities["cluster"]', 'row': 108, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_cluster"].capabilities["feature"]', 'row': 107, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-cluster'}
kube_controller_manager_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-controller-manager'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-controller-manager'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_controller_manager_cert"].requirements{0}', 'row': 359, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_controller_manager_cert"].capabilities["cert"]', 'row': 353, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_controller_manager_cert"].capabilities["feature"]', 'row': 353, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-controller-manager'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-controller-manager'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_local_cluster
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.Cluster': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$value': '127.0.0.1'}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_local_cluster"].requirements{0}', 'row': 469, 'column': 15}}], 'capabilities': {'cluster': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.Cluster': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'test-cluster'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_local_cluster"].capabilities["cluster"]', 'row': 463, 'column': 9}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_local_cluster"].capabilities["feature"]', 'row': 462, 'column': 7}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': '127.0.0.1'}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'test-cluster'}
kube_proxy
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kube.Proxy': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'cluster_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 70, 'column': 9, 'path': 'topology_template.node_templates["kube_proxy"].properties["cluster_cidr"]'}}, 'component_version': {'$information': {'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 69, 'column': 9, 'path': 'topology_template.node_templates["kube_proxy"].properties["component_version"]'}}}, 'attributes': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'admin_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 72, 'column': 9, 'path': 'topology_template.node_templates["kube_proxy"].attributes["deploy_kubeconfig_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'kubectl', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubectl', 'nodeTemplateName': 'kubectl', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy"].requirements{0}', 'row': 74, 'column': 20}}, {'name': 'deploy_kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'admin_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/admin.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy"].requirements{1}', 'row': 76, 'column': 13}}, {'name': 'kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'kube_proxy_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy"].requirements{2}', 'row': 78, 'column': 23}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy"].capabilities["feature"]', 'row': 66, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'cluster_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 39, 'column': 27, 'path': 'node_types["kubetos.nodes.Kube.Proxy"].interfaces["Standard"].inputs["cluster_cidr"].value'}}, 'kube_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 37, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.Proxy"].interfaces["Standard"].inputs["kube_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 37, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.Proxy"].interfaces["Standard"].inputs["kube_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kube-proxy--start.yaml', 'dependencies': [], 'inputs': {'deploy_kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'deploy_kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 46, 'column': 41, 'path': 'node_types["kubetos.nodes.Kube.Proxy"].interfaces["Standard"].operations["start"].inputs["deploy_kubeconfig_path"].value'}}, 'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubeconfig'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/addons.yaml', 'row': 44, 'column': 17, 'path': 'node_types["kubetos.nodes.Kube.Proxy"].interfaces["Standard"].operations["start"].inputs["kubeconfig"].value'}}}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_proxy_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-proxy'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:node-proxier'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy_cert"].requirements{0}', 'row': 101, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy_cert"].capabilities["cert"]', 'row': 95, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy_cert"].capabilities["feature"]', 'row': 95, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-proxy'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:node-proxier'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_proxy_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy_kubeconfig"].requirements{0}', 'row': 92, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_proxy_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy_kubeconfig"].requirements{1}', 'row': 93, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy_kubeconfig"].capabilities["feature"]', 'row': 89, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kube_proxy_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_proxy_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_proxy_user"].requirements{0}', 'row': 87, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy_user"].capabilities["feature"]', 'row': 82, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-proxy'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_proxy_user"].capabilities["user"]', 'row': 83, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-proxy'}
kube_scheduler_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-scheduler'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-scheduler'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kube_scheduler_cert"].requirements{0}', 'row': 311, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_scheduler_cert"].capabilities["cert"]', 'row': 305, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kube_scheduler_cert"].capabilities["feature"]', 'row': 305, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-scheduler'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:kube-scheduler'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubectl
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubectl': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 141, 'column': 9, 'path': 'topology_template.node_templates["kubectl"].properties["component_version"]'}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubectl"].requirements{0}', 'row': 143, 'column': 17}}, {'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'admin_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/admin.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubectl"].requirements{1}', 'row': 145, 'column': 13}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubectl"].capabilities["feature"]', 'row': 138, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'kubectl_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 150, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubectl"].interfaces["Standard"].inputs["kubectl_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 150, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubectl"].interfaces["Standard"].inputs["kubectl_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubectl--create.yaml', 'dependencies': ['kubectl_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubelet
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubelet': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 437, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].properties["component_version"]'}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 438, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].properties["pod_cidr"]'}}}, 'attributes': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'ca_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 444, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].attributes["ca_cert_path"]'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_cert_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 442, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].attributes["cert_path"]'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$value': '10.32.0.3'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 443, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].attributes["key_path"]'}}, 'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 441, 'column': 9, 'path': 'topology_template.node_templates["kubelet"].attributes["kubeconfig_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet"].requirements{0}', 'row': 446, 'column': 17}}, {'name': 'cri_runtime', 'capabilityTypeName': 'kubetos.capabilities.CRI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'crio', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.Kubelet.UsesRuntime': {'parent': 'tosca::HostedOn'}, 'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'dns_ip': {'$information': {'type': {'name': 'string'}}, '$value': '10.32.0.3'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': 'ansible/kubelet-to-runtime--pre-configure-target.yaml', 'dependencies': ['ansible/files/resolved.conf.j2'], 'inputs': {'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 41, 'column': 17, 'path': 'relationship_types["kubetos.relationships.Kubelet.UsesRuntime"].interfaces["Configure"].operations["pre_configure_target"].inputs["dns_ip"].value'}}}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet"].requirements{1}', 'row': 448, 'column': 13}}, {'name': 'kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'kubelet_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/kubelet.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet"].requirements{2}', 'row': 451, 'column': 13}}, {'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.pem'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet"].requirements{3}', 'row': 454, 'column': 13}}, {'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/kubelet.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/kubelet.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet"].requirements{4}', 'row': 457, 'column': 13}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet"].capabilities["feature"]', 'row': 432, 'column': 7}}, 'kubelet': {'description': '', 'types': {'kubetos.capabilities.Kubelet': {'parent': 'tosca::Container'}, 'tosca::Container': {'description': 'The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.6', 'tosca.canonical-name': 'tosca::Container', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'static_pod_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/manifests'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet"].capabilities["kubelet"]', 'row': 433, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'kubelet_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 210, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].inputs["kubelet_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 210, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].inputs["kubelet_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/kubelet--configure.yaml', 'dependencies': ['kubelet_role'], 'inputs': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 226, 'column': 31, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["ca_cert_path"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 224, 'column': 28, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["cert_path"].value'}}, 'cri_socket': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cri_runtime'}, {'$value': 'cri'}, {'$value': 'url_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 222, 'column': 29, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["cri_socket"].value'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 228, 'column': 25, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["dns_ip"].value'}}, 'ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 221, 'column': 21, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["ip"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 225, 'column': 27, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["key_path"].value'}}, 'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 227, 'column': 34, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["kubeconfig_path"].value'}}, 'kubelet_static_pod_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubelet'}, {'$value': 'static_pod_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 223, 'column': 42, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["kubelet_static_pod_path"].value'}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 229, 'column': 27, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["pod_cidr"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubelet--create.yaml', 'dependencies': ['kubelet_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kubelet--start.yaml', 'dependencies': ['kubelet_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': '10.32.0.3'}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/manifests'}
kubelet_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'system:node:'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 489, 'column': 9, 'path': 'topology_template.node_templates["kubelet_cert"].properties["common_name"]'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 489, 'column': 9, 'path': 'topology_template.node_templates["kubelet_cert"].properties["common_name"]'}}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': [{'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 492, 'column': 13, 'path': 'topology_template.node_templates["kubelet_cert"].properties["hostnames"][0]'}}, {'$value': '127.0.0.1'}]}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:nodes'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_cert"].requirements{0}', 'row': 497, 'column': 15}}, {'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_cert"].requirements{1}', 'row': 498, 'column': 23}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_cert"].capabilities["cert"]', 'row': 486, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_cert"].capabilities["feature"]', 'row': 486, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

[{'$value': 'system:node:'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 489, 'column': 9, 'path': 'topology_template.node_templates["kubelet_cert"].properties["common_name"]'}}]
{'$value': 'system:node:'}
{'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 489, 'column': 9, 'path': 'topology_template.node_templates["kubelet_cert"].properties["common_name"]'}}
{'$value': '127.0.0.1'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:nodes'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubelet_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_local_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_kubeconfig"].requirements{0}', 'row': 483, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_kubeconfig"].requirements{1}', 'row': 484, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_kubeconfig"].capabilities["feature"]', 'row': 480, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubelet_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_user"].requirements{0}', 'row': 478, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_user"].capabilities["feature"]', 'row': 473, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-auth'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_user"].capabilities["user"]', 'row': 474, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-auth'}
kubelet_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubelet': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 157, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].properties["component_version"]'}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 158, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].properties["pod_cidr"]'}}}, 'attributes': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'ca_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 164, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].attributes["ca_cert_path"]'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_cert_hosted'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 162, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].attributes["cert_path"]'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 160, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].attributes["dns_ip"]'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_cert_hosted'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 163, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].attributes["key_path"]'}}, 'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'kubelet_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 161, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker"].attributes["kubeconfig_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].requirements{0}', 'row': 166, 'column': 17}}, {'name': 'cri_runtime', 'capabilityTypeName': 'kubetos.capabilities.CRI', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'crio_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.Kubelet.UsesRuntime': {'parent': 'tosca::HostedOn'}, 'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'dns_ip': {'$information': {'type': {'name': 'string'}}, '$value': '10.32.0.3'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': 'ansible/kubelet-to-runtime--pre-configure-target.yaml', 'dependencies': ['ansible/files/resolved.conf.j2'], 'inputs': {'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 41, 'column': 17, 'path': 'relationship_types["kubetos.relationships.Kubelet.UsesRuntime"].interfaces["Configure"].operations["pre_configure_target"].inputs["dns_ip"].value'}}}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].requirements{1}', 'row': 168, 'column': 13}}, {'name': 'kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'kubelet_worker_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/kubelet.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].requirements{2}', 'row': 171, 'column': 13}}, {'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/ca.pem'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].requirements{3}', 'row': 174, 'column': 13}}, {'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_worker_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesCertificate': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'cert_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/kubelet.crt'}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/pki/kubelet.key'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/cert-mirror--create.yaml', 'dependencies': [], 'inputs': {'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 18, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 24, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["cert_path"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 21, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 27, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesCertificate"].interfaces["Configure"].operations["pre_configure_source"].inputs["key_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].requirements{4}', 'row': 177, 'column': 13}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].capabilities["feature"]', 'row': 152, 'column': 7}}, 'kubelet': {'description': '', 'types': {'kubetos.capabilities.Kubelet': {'parent': 'tosca::Container'}, 'tosca::Container': {'description': 'The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.6', 'tosca.canonical-name': 'tosca::Container', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'static_pod_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/manifests'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker"].capabilities["kubelet"]', 'row': 153, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'kubelet_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 210, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].inputs["kubelet_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 210, 'column': 13, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].inputs["kubelet_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': 'ansible/kubelet--configure.yaml', 'dependencies': ['kubelet_role'], 'inputs': {'ca_cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca_cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 226, 'column': 31, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["ca_cert_path"].value'}}, 'cert_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cert_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 224, 'column': 28, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["cert_path"].value'}}, 'cri_socket': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cri_runtime'}, {'$value': 'cri'}, {'$value': 'url_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 222, 'column': 29, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["cri_socket"].value'}}, 'dns_ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'dns_ip'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 228, 'column': 25, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["dns_ip"].value'}}, 'ip': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'private_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 221, 'column': 21, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["ip"].value'}}, 'key_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'key_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 225, 'column': 27, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["key_path"].value'}}, 'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 227, 'column': 34, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["kubeconfig_path"].value'}}, 'kubelet_static_pod_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubelet'}, {'$value': 'static_pod_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 223, 'column': 42, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["kubelet_static_pod_path"].value'}}, 'pod_cidr': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'pod_cidr'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 229, 'column': 27, 'path': 'node_types["kubetos.nodes.Kubelet"].interfaces["Standard"].operations["configure"].inputs["pod_cidr"].value'}}}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubelet--create.yaml', 'dependencies': ['kubelet_role', 'download_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kubelet--start.yaml', 'dependencies': ['kubelet_role'], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/manifests'}
kubelet_worker_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'system:node:'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 198, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker_cert"].properties["common_name"]'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 198, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker_cert"].properties["common_name"]'}}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': [{'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 201, 'column': 13, 'path': 'topology_template.node_templates["kubelet_worker_cert"].properties["hostnames"][0]'}}, {'$value': '127.0.0.1'}]}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'system:nodes'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker_cert"].requirements{0}', 'row': 206, 'column': 15}}, {'name': 'dependency', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'tosca::Root', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker_cert"].requirements{1}', 'row': 207, 'column': 23}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker_cert"].capabilities["cert"]', 'row': 195, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker_cert"].capabilities["feature"]', 'row': 195, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

[{'$value': 'system:node:'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 198, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker_cert"].properties["common_name"]'}}]
{'$value': 'system:node:'}
{'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'dependency'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 198, 'column': 9, 'path': 'topology_template.node_templates["kubelet_worker_cert"].properties["common_name"]'}}
{'$value': '127.0.0.1'}
{'$information': {'type': {'name': 'string'}}, '$value': 'system:nodes'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubelet_worker_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker_kubeconfig"].requirements{0}', 'row': 192, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_worker_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker_kubeconfig"].requirements{1}', 'row': 193, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker_kubeconfig"].capabilities["feature"]', 'row': 189, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
kubelet_worker_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet_worker_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["kubelet_worker_user"].requirements{0}', 'row': 187, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker_user"].capabilities["feature"]', 'row': 182, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-auth'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubelet_worker_user"].capabilities["user"]', 'row': 183, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-auth'}
kubernetes_ca
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.CertificateAuthority': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-ca'}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [], 'capabilities': {'ca': {'description': '', 'types': {'kubetos.capabilities.CertificateAuthority': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubernetes_ca"].capabilities["ca"]', 'row': 500, 'column': 5}}, 'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubernetes_ca"].capabilities["cert"]', 'row': 500, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["kubernetes_ca"].capabilities["feature"]', 'row': 500, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/ca--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2'], 'inputs': {'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 124, 'column': 17, 'path': 'node_types["kubetos.nodes.CertificateAuthority"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 127, 'column': 17, 'path': 'node_types["kubetos.nodes.CertificateAuthority"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes-ca'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
runc
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Runc': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.1.1', '$originalString': '1.1.1', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 1, 'fix': 1, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["runc"].requirements{0}', 'row': 557, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["runc"].capabilities["feature"]', 'row': 549, 'column': 7}}, 'oci': {'description': '', 'types': {'kubetos.capabilities.OCI.Plugin': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'spec': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}, 'fields': {'name': {'type': {'name': 'string'}}, 'path': {'type': {'name': 'string'}}, 'root': {'type': {'name': 'string'}}}}, '$map': [{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'runc'}, {'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/usr/sbin/runc'}, {'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/runc'}]}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["runc"].capabilities["oci"]', 'row': 550, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'runc_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 71, 'column': 27, 'path': 'node_types["kubetos.nodes.Runc"].interfaces["Standard"].inputs["runc_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/runc--create.yaml', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'runc'}
{'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/usr/sbin/runc'}
{'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/runc'}
runc_worker
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Runc': {'parent': 'tosca::SoftwareComponent'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::SoftwareComponent': {'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.4', 'tosca.canonical-name': 'tosca::SoftwareComponent', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'directives': [], 'properties': {'component_version': {'$information': {'definition': {'description': "The optional software component's version."}, 'type': {'name': 'version'}}, '$value': {'$string': '1.1.1', '$originalString': '1.1.1', '$comparer': 'tosca.comparer.version', 'major': 1, 'minor': 1, 'fix': 1, 'qualifier': '', 'build': 0}}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'tosca::Compute', 'capabilityName': '', 'nodeTypeName': 'tosca::Compute', 'nodeTemplateName': 'compute_worker', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["runc_worker"].requirements{0}', 'row': 239, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["runc_worker"].capabilities["feature"]', 'row': 231, 'column': 7}}, 'oci': {'description': '', 'types': {'kubetos.capabilities.OCI.Plugin': {'parent': 'tosca::Node'}, 'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'spec': {'$information': {'type': {'name': 'kubetos.datatypes.OCI.RuntimeSpec'}, 'fields': {'name': {'type': {'name': 'string'}}, 'path': {'type': {'name': 'string'}}, 'root': {'type': {'name': 'string'}}}}, '$map': [{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'runc'}, {'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/usr/sbin/runc'}, {'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/runc'}]}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["runc_worker"].capabilities["oci"]', 'row': 232, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'runc_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/cri/main.yaml', 'row': 71, 'column': 27, 'path': 'node_types["kubetos.nodes.Runc"].interfaces["Standard"].inputs["runc_version"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/runc--create.yaml', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$key': {'$value': 'name'}, '$information': {'type': {'name': 'string'}}, '$value': 'runc'}
{'$key': {'$value': 'path'}, '$information': {'type': {'name': 'string'}}, '$value': '/usr/sbin/runc'}
{'$key': {'$value': 'root'}, '$information': {'type': {'name': 'string'}}, '$value': '/run/runc'}
scheduler
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kube.Scheduler': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'component_version': {'$information': {'type': {'name': 'version'}}, '$functionCall': {'name': 'tosca.function.get_input', 'arguments': [{'$value': 'kubernetes_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 280, 'column': 9, 'path': 'topology_template.node_templates["scheduler"].properties["component_version"]'}}, 'config_path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/kube-scheduler.yaml'}}, 'attributes': {'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'scheduler_kubeconfig_hosted'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/cluster.yaml', 'row': 283, 'column': 9, 'path': 'topology_template.node_templates["scheduler"].attributes["kubeconfig_path"]'}}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'host', 'capabilityTypeName': 'kubetos.capabilities.Kubelet', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubelet', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::HostedOn': {'description': 'This type represents a hosting relationship between two nodes.', 'metadata': {'role': 'host', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.3', 'tosca.canonical-name': 'tosca::HostedOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["scheduler"].requirements{0}', 'row': 285, 'column': 17}}, {'name': 'kubeconfig', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'kubetos.nodes.Kubeconfig', 'nodeTemplateName': 'scheduler_kubeconfig', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'kubetos.relationships.UsesKubeconfig': {'parent': 'tosca::DependsOn'}, 'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'path': {'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/scheduler.conf'}}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': 'ansible/kubeconfig-mirror--create.yaml', 'dependencies': [], 'inputs': {'kubeconfig': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'TARGET'}, {'$value': 'conf'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 59, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["kubeconfig"].value'}}, 'path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 62, 'column': 17, 'path': 'relationship_types["kubetos.relationships.UsesKubeconfig"].interfaces["Configure"].operations["pre_configure_source"].inputs["path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["scheduler"].requirements{1}', 'row': 287, 'column': 13}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["scheduler"].capabilities["feature"]', 'row': 277, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {'config_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'config_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 376, 'column': 26, 'path': 'node_types["kubetos.nodes.Kube.Scheduler"].interfaces["Standard"].inputs["config_path"].value'}}, 'kube_version': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.concat', 'arguments': [{'$value': 'v'}, {'$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'component_version'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 373, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.Scheduler"].interfaces["Standard"].inputs["kube_version"].value'}}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 373, 'column': 13, 'path': 'node_types["kubetos.nodes.Kube.Scheduler"].interfaces["Standard"].inputs["kube_version"].value'}}, 'static_pod_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'host'}, {'$value': 'kubelet'}, {'$value': 'static_pod_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 375, 'column': 30, 'path': 'node_types["kubetos.nodes.Kube.Scheduler"].interfaces["Standard"].inputs["static_pod_path"].value'}}}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': 'ansible/kube-scheduler--start.yaml', 'dependencies': ['ansible/files/kube-scheduler.yaml.j2', 'ansible/files/kube-scheduler.config.yaml.j2'], 'inputs': {'kubeconfig_path': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'kubeconfig_path'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 380, 'column': 34, 'path': 'node_types["kubetos.nodes.Kube.Scheduler"].interfaces["Standard"].operations["start"].inputs["kubeconfig_path"].value'}}}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': '/etc/kubernetes/kube-scheduler.yaml'}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
scheduler_kubeconfig
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubeconfig': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'conf': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cluster', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.Cluster', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_local_cluster', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["scheduler_kubeconfig"].requirements{0}', 'row': 302, 'column': 20}}, {'name': 'user', 'capabilityTypeName': 'kubetos.capabilities.Kubernetes.User', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'scheduler_user', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["scheduler_kubeconfig"].requirements{1}', 'row': 303, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["scheduler_kubeconfig"].capabilities["feature"]', 'row': 299, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/kubeconfig--create.yaml', 'dependencies': [], 'inputs': {'apiserver_address': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'apiserver_address'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 129, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["apiserver_address"].value'}}, 'apiserver_port': {'$information': {'type': {'name': 'string'}}, '$value': '6443'}, 'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 120, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 123, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cert"].value'}}, 'cluster_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'cluster'}, {'$value': 'cluster'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 117, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["cluster_name"].value'}}, 'key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'cert'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 126, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["key"].value'}}, 'user_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'user'}, {'$value': 'user'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/kubernetes/cluster.yaml', 'row': 114, 'column': 17, 'path': 'node_types["kubetos.nodes.Kubeconfig"].interfaces["Standard"].operations["create"].inputs["user_name"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
scheduler_user
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'cert', 'capabilityTypeName': 'kubetos.capabilities.Certificate', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kube_scheduler_cert', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["scheduler_user"].requirements{0}', 'row': 297, 'column': 17}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["scheduler_user"].capabilities["feature"]', 'row': 292, 'column': 7}}, 'user': {'description': '', 'types': {'kubetos.capabilities.Kubernetes.User': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {'name': {'$information': {'type': {'name': 'string'}}, '$value': 'default-scheduler'}}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["scheduler_user"].capabilities["user"]', 'row': 293, 'column': 9}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': 'default-scheduler'}
service_account_cert
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'kubetos.nodes.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'common_name': {'$information': {'type': {'name': 'string'}}, '$value': 'service-accounts'}, 'hostnames': {'$information': {'type': {'name': 'list'}, 'entry': {'name': 'string'}}, '$list': []}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}}, 'attributes': {'cert': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'key': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'ca', 'capabilityTypeName': 'kubetos.capabilities.CertificateAuthority', 'capabilityName': '', 'nodeTypeName': '', 'nodeTemplateName': 'kubernetes_ca', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["service_account_cert"].requirements{0}', 'row': 426, 'column': 15}}], 'capabilities': {'cert': {'description': '', 'types': {'kubetos.capabilities.Certificate': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["service_account_cert"].capabilities["cert"]', 'row': 420, 'column': 5}}, 'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["service_account_cert"].capabilities["feature"]', 'row': 420, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': './ansible/cert--create.yaml', 'dependencies': ['./ansible/files/csr.json.j2', './ansible/files/ca-config.json'], 'inputs': {'ca_cert': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'cert'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 85, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_cert"].value'}}, 'ca_key': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_attribute', 'arguments': [{'$value': 'SELF'}, {'$value': 'ca'}, {'$value': 'key'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 88, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["ca_key"].value'}}, 'common_name': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'common_name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 74, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["common_name"].value'}}, 'hostnames': {'$information': {'type': {'name': 'list'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'hostnames'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 80, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["hostnames"].value'}}, 'organisation': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'organisation'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/pki/main.yaml', 'row': 77, 'column': 17, 'path': 'node_types["kubetos.nodes.Certificate"].interfaces["Standard"].operations["create"].inputs["organisation"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'service-accounts'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubernetes'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
sg
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.SecurityGroup': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'description': {'$information': {'type': {'name': 'string'}}, '$value': 'security group created with kubetos'}, 'name': {'$information': {'type': {'name': 'string'}}, '$value': 'kubetos-security-group'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["sg"].capabilities["feature"]', 'row': 593, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/group--create.yaml', 'dependencies': [], 'inputs': {'description': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'description'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 45, 'column': 30, 'path': 'node_types["openstack.nodes.SecurityGroup"].interfaces["Standard"].operations["create"].inputs["description"].value'}}, 'security_group': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 44, 'column': 33, 'path': 'node_types["openstack.nodes.SecurityGroup"].interfaces["Standard"].operations["create"].inputs["security_group"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'security group created with kubetos'}
{'$information': {'type': {'name': 'string'}}, '$value': 'kubetos-security-group'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
sg_rule_icmp
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.SecurityGroupRule': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'protocol': {'$information': {'type': {'name': 'string'}}, '$value': 'icmp'}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'security_group', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'openstack.nodes.SecurityGroup', 'nodeTemplateName': 'sg', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["sg_rule_icmp"].requirements{0}', 'row': 621, 'column': 27}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["sg_rule_icmp"].capabilities["feature"]', 'row': 615, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/group-rule--create.yaml', 'dependencies': [], 'inputs': {'protocol': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'protocol'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 70, 'column': 27, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["protocol"].value'}}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'remote_ip_prefix'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 71, 'column': 35, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["remote_ip_prefix"].value'}}, 'security_group': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'security_group'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 69, 'column': 33, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["security_group"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'icmp'}
{'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
sg_rule_tcp
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.SecurityGroupRule': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'protocol': {'$information': {'type': {'name': 'string'}}, '$value': 'tcp'}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'security_group', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'openstack.nodes.SecurityGroup', 'nodeTemplateName': 'sg', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["sg_rule_tcp"].requirements{0}', 'row': 605, 'column': 27}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["sg_rule_tcp"].capabilities["feature"]', 'row': 599, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/group-rule--create.yaml', 'dependencies': [], 'inputs': {'protocol': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'protocol'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 70, 'column': 27, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["protocol"].value'}}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'remote_ip_prefix'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 71, 'column': 35, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["remote_ip_prefix"].value'}}, 'security_group': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'security_group'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 69, 'column': 33, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["security_group"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'tcp'}
{'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
sg_rule_udp
dict_keys(['metadata', 'description', 'types', 'directives', 'properties', 'attributes', 'requirements', 'capabilities', 'interfaces', 'artifacts'])
{'metadata': {}, 'description': '', 'types': {'openstack.nodes.SecurityGroupRule': {'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'directives': [], 'properties': {'protocol': {'$information': {'type': {'name': 'string'}}, '$value': 'udp'}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}}, 'attributes': {'id': {'$information': {'type': {'name': 'string'}}, '$value': None}, 'state': {'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'requirements': [{'name': 'security_group', 'capabilityTypeName': 'tosca::Node', 'capabilityName': '', 'nodeTypeName': 'openstack.nodes.SecurityGroup', 'nodeTemplateName': 'sg', 'nodeTemplatePropertyConstraints': {}, 'capabilityPropertyConstraints': {}, 'relationship': {'metadata': {}, 'description': '', 'types': {'tosca::DependsOn': {'description': 'This type represents a general dependency relationship between two nodes.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2', 'tosca.canonical-name': 'tosca::DependsOn', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {'state': {'$information': {'definition': {'description': 'The state of the relationship instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}, 'tosca_id': {'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}, 'tosca_name': {'$information': {'definition': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}}, 'interfaces': {'Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'types': {'tosca::Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.5', 'tosca.canonical-name': 'tosca::Configure', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'inputs': {}, 'operations': {'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_source': {'description': 'Operation to remove the source node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'remove_target': {'description': 'Operation to remove a target node.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}}, 'location': {'path': 'topology_template.node_templates["sg_rule_udp"].requirements{0}', 'row': 613, 'column': 27}}], 'capabilities': {'feature': {'description': '', 'types': {'tosca::Node': {'description': 'The Node capability indicates the base capabilities of a TOSCA Node Type.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.2', 'tosca.canonical-name': 'tosca::Node', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}, 'tosca::Root': {'description': 'This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.5.1', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}}, 'properties': {}, 'attributes': {}, 'minRelationshipCount': 0, 'maxRelationshipCount': -1, 'location': {'path': 'topology_template.node_templates["sg_rule_udp"].capabilities["feature"]', 'row': 607, 'column': 5}}}, 'interfaces': {'Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'types': {'tosca::Root': {'description': 'This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.3', 'tosca.canonical-name': 'tosca::Root', 'tosca.normative': 'true'}}, 'tosca::Standard': {'description': 'This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.', 'metadata': {'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.8.4', 'tosca.canonical-name': 'tosca::Standard', 'tosca.normative': 'true'}, 'parent': 'tosca::Root'}}, 'inputs': {}, 'operations': {'configure': {'description': 'Standard lifecycle configure operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'create': {'description': 'Standard lifecycle create operation.', 'implementation': 'ansible/group-rule--create.yaml', 'dependencies': [], 'inputs': {'protocol': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'protocol'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 70, 'column': 27, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["protocol"].value'}}, 'remote_ip_prefix': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'remote_ip_prefix'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 71, 'column': 35, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["remote_ip_prefix"].value'}}, 'security_group': {'$information': {'type': {'name': 'string'}}, '$functionCall': {'name': 'tosca.function.get_property', 'arguments': [{'$value': 'SELF'}, {'$value': 'security_group'}, {'$value': 'name'}], 'url': 'file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/profiles/openstack/main.yaml', 'row': 69, 'column': 33, 'path': 'node_types["openstack.nodes.SecurityGroupRule"].interfaces["Standard"].operations["create"].inputs["security_group"].value'}}}, 'outputs': {}, 'timeout': -1}, 'delete': {'description': 'Standard lifecycle delete operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'start': {'description': 'Standard lifecycle start operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}, 'stop': {'description': 'Standard lifecycle stop operation.', 'implementation': '', 'dependencies': [], 'inputs': {}, 'outputs': {}, 'timeout': -1}}, 'notifications': {}}}, 'artifacts': {}}

{'$information': {'type': {'name': 'string'}}, '$value': 'udp'}
{'$information': {'type': {'name': 'string'}}, '$value': '0.0.0.0/0'}
{'$information': {'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'The state of the node instance.'}, 'type': {'name': 'string'}}, '$value': 'initial'}
{'$information': {'definition': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.'}, 'type': {'name': 'string'}}, '$value': None}
{'$information': {'definition': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.'}, 'type': {'name': 'string'}}, '$value': None}
dict_keys(['description', 'nodeTemplates', 'groups', 'policies', 'inputs', 'outputs', 'workflows', 'substitution', 'metadata', 'scriptletNamespace'])
