tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: "kubetos"
  template_author: "shishqa"
  template_version: "1.0"

imports:
  - profiles/openstack/main.yaml
  - profiles/etcd/main.yaml
  - profiles/cri/main.yaml
  - profiles/cni/main.yaml
  - profiles/kubernetes/main.yaml

topology_template:

  inputs:

    kubernetes_version:
      type: version
      default: 1.21.0

    cluster_name:
      type: string
      default: kubernetes-cluster

    pod_cidr:
      type: string
      default: 10.233.0.0/16

    service_cidr:
      type: string
      default: 10.32.0.0/16

    dns_ip:
      type: string
      default: 10.32.0.3

  node_templates:

    kubelet:
      type: kubetos.nodes.Kubelet
      capabilities:
        kubelet:
          properties:
            static_pod_path: /etc/kubernetes/manifests
      properties:
        component_version: { get_input: [ kubernetes_version ] }
        pod_cidr: { get_input: [ pod_cidr ] }
        dns_ip: 10.32.0.3
      requirements:
        - host: compute
        - cri_runtime:
            node: crio
            relationship: kubelet_runtime
        - kubeconfig: kubelet_kubeconfig_hosted
        - ca: kubernetes_ca_hosted
        - cert: kubelet_cert_hosted
      artifacts:
        kubelet_role: {}
        download_role: {}

    kube_local_cluster:
      type: kubetos.nodes.Kubernetes.Cluster
      capabilities:
        cluster:
          properties:
            name: test-cluster
      attributes:
        apiserver_address: 127.0.0.1
      requirements:
        - ca: kubernetes_ca

    kubelet_kubeconfig_hosted:
      type: kubetos.nodes.Artifact.Kubeconfig
      properties:
        path: /etc/kubernetes/kubelet.conf
      requirements:
        - kubeconfig: kubelet_kubeconfig
        - host: compute

    kubelet_kubeconfig:
      type: kubetos.nodes.Kubeconfig
      requirements:
        - cluster: kube_local_cluster
        - user: kubelet_user

    kubelet_user:
      type: kubetos.nodes.Kubernetes.User
      capabilities:
        user:
          properties:
            name: default-auth
      requirements:
        - cert: kubelet_cert

    kubelet_cert_hosted:
      type: kubetos.nodes.Artifact.Certificate
      properties:
        cert_path: /etc/kubernetes/pki/kubelet.crt
        key_path: /etc/kubernetes/pki/kubelet.key
      requirements:
        - cert: kubelet_cert
        - host: compute

    kubelet_cert:
      type: kubetos.nodes.Certificate
      properties:
        common_name: { concat: [ "system:node:", { get_property: [ SELF, dependency, name ] } ] }
        organisation: system:nodes
        hostnames:
          - { get_property: [ SELF, dependency, name ] }
            #- { get_attribute: [ SELF, dependency, private_address ] }
            #- { get_attribute: [ SELF, dependency, public_address ] }
          - 127.0.0.1
      requirements:
        - ca: kubernetes_ca
        - dependency: compute

    kubernetes_ca_hosted:
      type: kubetos.nodes.Artifact.Certificate
      properties:
        cert_path: /etc/kubernetes/pki/ca.crt
        key_path: /etc/kubernetes/pki/ca.pem
      requirements:
        - cert: kubernetes_ca
        - host: compute

    kubernetes_ca:
      type: kubetos.nodes.CertificateAuthority
      properties:
        common_name: kubernetes-ca
        organisation: kubernetes

    # ===

    etcd:
      type: kubetos.nodes.Etcd
      capabilities:
        access_address:
          properties:
            port: 2379
            api_version: v2
        peer_address:
          properties:
            port: 2380
      requirements:
        - host: compute
        - cluster: etcd_cluster
      artifacts:
        etcd_role: {}
        download_role: {}

    etcd_cluster:
      type: kubetos.nodes.Etcd.Cluster
      requirements:
        - dependency: compute

    crictl:
      type: kubetos.nodes.Crictl
      properties:
        component_version: { get_input: [ kubernetes_version ] }
      requirements:
        - host: compute
        - cri_runtime: crio
      artifacts:
        crictl_role: {}
        download_role: {}

    crio:
      type: kubetos.nodes.CRI-O
      capabilities:
        cri:
          properties:
            url_path: /var/run/crio/crio.sock
      requirements:
        - host: compute
        - oci_runtime: runc
        - oci_runtime: kata
        - cni: cni
      artifacts:
        crio_role: {}

    runc:
      type: kubetos.nodes.Runc
      capabilities:
        oci:
          properties:
            spec:
              name: runc
              path: /usr/sbin/runc
              root: /run/runc
      requirements:
        - host: compute

    kata:
      type: kubetos.nodes.Kata
      capabilities:
        oci:
          properties:
            spec:
              name: kata
              path: /opt/kata/bin/kata-runtime
              root: /run/kata-containers
      requirements:
        - host: compute
      artifacts:
        kata_role: {}
        download_role: {}

    cni:
      type: kubetos.nodes.CNI
      capabilities:
        cni:
          properties:
            binary_dir: /opt/cni/bin
            config_dir: /etc/cni/net.d
      requirements:
        - host: compute
      artifacts:
        cni_role: {}
        download_role: {}

    compute:
      type: openstack.nodes.Compute
      properties:
        name: kubetos--control-plane
        image: "Ubuntu Server 20.04 LTS (Focal Fossa)"
        flavor: Memory2.small.s50
        network: net-for-intra-sandbox
        floating_ip_pool: ispras
        key_name: shishqa
      requirements:
        - security_group: sg

    sg:
      type: openstack.nodes.SecurityGroup
      properties:
        name: kubetos-security-group
        description: security group created with kubetos

    sg_rule_tcp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

    sg_rule_udp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: udp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

    sg_rule_icmp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

  relationship_templates:

    kubelet_runtime:
      type: kubetos.relationships.Kubelet.UsesRuntime
      properties:
        dns_ip: 10.32.0.3