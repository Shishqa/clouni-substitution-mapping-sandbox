description: ""
nodeTemplates:
  tosca_server_example:
    metadata: {}
    description: ""
    types:
      tosca::Abstract.Compute:
        description: The TOSCA Abstract.Compute node represents an abstract compute resource without any requirements on storage or network resources.
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.2
          tosca.canonical-name: tosca::Abstract.Compute
          tosca.normative: "true"
        parent: tosca::Root
      tosca::Compute:
        description: The TOSCA Compute node represents one or more real or virtual processors of software applications or services along with other essential local resources. Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) "server".
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.3
          tosca.canonical-name: tosca::Compute
          tosca.normative: "true"
        parent: tosca::Abstract.Compute
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives:
      - substitute
    properties: {}
    attributes:
      networks:
        $information:
          definition:
            description: The list of logical networks assigned to the compute host instance and information about them.
          type:
            name: map
        $value: null
      ports:
        $information:
          definition:
            description: The list of logical ports assigned to the compute host instance and information about them.
          type:
            name: map
        $value: null
      private_address:
        $information:
          definition:
            description: The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.
          type:
            name: string
        $value: null
      public_address:
        $information:
          definition:
            description: The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.
          type:
            name: string
        $value: null
      state:
        $information:
          definition:
            description: The state of the node instance.
          type:
            name: string
        $value: initial
      tosca_id:
        $information:
          definition:
            description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
          type:
            name: string
        $value: null
      tosca_name:
        $information:
          definition:
            description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
          type:
            name: string
        $value: null
    requirements: []
    capabilities:
      binding:
        description: ""
        types:
          tosca::Bindable:
            description: A node type that includes the Bindable capability indicates that it can be bound to a logical network association via a network port.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.14
              tosca.canonical-name: tosca::Bindable
              tosca.normative: "true"
            parent: tosca::Node
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["binding"]
          row: 8
          column: 7
      endpoint:
        description: ""
        types:
          tosca::Endpoint:
            description: This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.7
              tosca.canonical-name: tosca::Endpoint
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Endpoint.Admin:
            description: This is the default TOSCA type that should be used or extended to define a specialized administrator endpoint capability.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.9
              tosca.canonical-name: tosca::Endpoint.Admin
              tosca.normative: "true"
            parent: tosca::Endpoint
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties:
          initiator:
            $information:
              definition:
                description: The optional indicator of the direction of the connection.
              type:
                name: string
            $constraints:
              - $functionCall:
                  name: tosca.constraint.valid_values
                  arguments:
                    - $value: source
                    - $value: target
                    - $value: peer
                  url: internal:/tosca/simple/1.3/capabilities.yaml
                  row: 170
                  column: 9
                  path: capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default
            $value: source
          network_name:
            $information:
              definition:
                description: 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'
              type:
                name: string
            $value: net-for-intra-sandbox
          protocol:
            $information:
              definition:
                description: 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'
              type:
                name: string
            $value: tcp
          secure:
            $information:
              definition:
                description: Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.
              type:
                name: boolean
            $constraints:
              - $functionCall:
                  name: tosca.constraint.equal
                  arguments:
                    - $value: true
                  url: internal:/tosca/simple/1.3/capabilities.yaml
                  row: 239
                  column: 9
                  path: capability_types["tosca.capabilities.Endpoint.Admin"].properties["secure"].default
            $value: true
        attributes:
          ip_address:
            $information:
              definition:
                description: 'Note: This is the IP address as propagated up by the associated node''s host (Compute) container.'
              type:
                name: string
            $value: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["endpoint"]
          row: 14
          column: 9
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["feature"]
          row: 8
          column: 7
      host:
        description: ""
        types:
          tosca::Compute:
            description: The Compute capability, when included on a Node Type or Template definition, indicates that the node can provide hosting on a named compute resource.
            metadata:
              role: host
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.3
              tosca.canonical-name: tosca::Compute
              tosca.normative: "true"
            parent: tosca::Container
          tosca::Container:
            description: The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.6
              tosca.canonical-name: tosca::Container
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties:
          disk_size:
            $information:
              definition:
                description: Size of the local disk available to applications running on the Compute node (default unit is MB).
              type:
                name: scalar-unit.size
            $constraints:
              - $functionCall:
                  name: tosca.constraint.greater_or_equal
                  arguments:
                    - $value:
                        $string: 0 B
                        $number: 0
                        $originalString: 0 MB
                        scalar: 0
                        unit: MB
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca-server-example.yaml
                  row: 12
                  column: 13
                  path: topology_template.node_templates["tosca_server_example"].capabilities["host"].properties["disk_size"]
            $value:
              $string: 10737418240 B
              $number: 10737418240
              $originalString: 10 GiB
              scalar: 10
              unit: GiB
          mem_size:
            $information:
              definition:
                description: Size of memory available to applications running on the Compute node (default unit is MB).
              type:
                name: scalar-unit.size
            $constraints:
              - $functionCall:
                  name: tosca.constraint.greater_or_equal
                  arguments:
                    - $value:
                        $string: 0 B
                        $number: 0
                        $originalString: 0 MB
                        scalar: 0
                        unit: MB
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca-server-example.yaml
                  row: 13
                  column: 13
                  path: topology_template.node_templates["tosca_server_example"].capabilities["host"].properties["mem_size"]
            $value:
              $string: 1073741824 B
              $number: 1073741824
              $originalString: 1 GiB
              scalar: 1
              unit: GiB
          num_cpus:
            $information:
              definition:
                description: Number of (actual or virtual) CPUs associated with the Compute node.
              type:
                name: integer
            $constraints:
              - $functionCall:
                  name: tosca.constraint.greater_or_equal
                  arguments:
                    - $value: 1
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca-server-example.yaml
                  row: 11
                  column: 13
                  path: topology_template.node_templates["tosca_server_example"].capabilities["host"].properties["num_cpus"]
            $value: 1
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["host"]
          row: 9
          column: 9
      os:
        description: ""
        types:
          tosca::OperatingSystem:
            description: This is the default TOSCA type that should be used to express an Operating System capability for a node.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.12
              tosca.canonical-name: tosca::OperatingSystem
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties:
          architecture:
            $information:
              definition:
                description: 'The Operating System (OS) architecture. Examples of valid values include: x86_32, x86_64, etc.'
              type:
                name: string
            $value: x86_64
          type:
            $information:
              definition:
                description: 'The Operating System (OS) type. Examples of valid values include: linux, aix, mac, windows, etc.'
              type:
                name: string
            $value: cirros
          version:
            $information:
              definition:
                description: The Operating System version.
              type:
                name: version
            $value:
              $string: 0.4.0
              $originalString: 0.4.0
              $comparer: tosca.comparer.version
              major: 0
              minor: 4
              fix: 0
              qualifier: ""
              build: 0
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["os"]
          row: 17
          column: 9
      scalable:
        description: ""
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Scalable:
            description: This is the default TOSCA type that should be used to express a scalability capability for a node.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.13
              tosca.canonical-name: tosca::Scalable
              tosca.normative: "true"
            parent: tosca::Root
        properties:
          default_instances:
            $information:
              definition:
                description: 'An optional property that indicates the requested default number of instances that should be the starting number of instances a TOSCA orchestrator should attempt to allocate. Note: The value for this property MUST be in the range between the values set for "min_instances" and "max_instances" properties.'
              type:
                name: integer
            $value: 1
          max_instances:
            $information:
              definition:
                description: This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.
              type:
                name: integer
            $value: 5
          min_instances:
            $information:
              definition:
                description: This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.
              type:
                name: integer
            $value: 1
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tosca_server_example"].capabilities["scalable"]
          row: 22
          column: 9
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
groups: {}
policies: {}
inputs: {}
outputs: {}
workflows: {}
substitution: null
metadata: {}
scriptletNamespace: {}
