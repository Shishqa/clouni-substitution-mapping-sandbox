description: ""
nodeTemplates:
  ca_cert_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: ca-cert
      path:
        $meta:
          type: string
        $primitive: CA_CERT_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["ca_cert_volume"].capabilities["feature"]
          row: 106
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["ca_cert_volume"].capabilities["volume"]
          row: 106
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  kube_apiserver_container:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Container:
        parent: tosca::Root
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      spec:
        $meta:
          type: kubetos.datatypes.Kubernetes.ContainerSpec
          fields:
            command:
              type: list
              element:
                type: string
            host_network:
              type: boolean
            image:
              type: string
            image_pull_policy:
              type: string
            name:
              type: string
            volume_mounts:
              type: list
              element:
                type: kubetos.datatypes.Kubernetes.VolumeMount
        $map:
          - $key:
              $primitive: image_pull_policy
            $primitive: IfNotPresent
          - $key:
              $primitive: volume_mounts
            $list:
              - $map:
                  - $key:
                      $primitive: name
                    $primitive: b
                  - $key:
                      $primitive: read_only
                    $primitive: false
                  - $key:
                      $primitive: mount_path
                    $primitive: a
          - $key:
              $primitive: host_network
            $primitive: false
          - $key:
              $primitive: command
            $list:
              - $primitive: kube-apiserver
              - $functionCall:
                  name: tosca.function.concat
                  arguments:
                    - $primitive: --advertise-address=
                    - $primitive: PRIVATE_ADDRESS
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca/templates/kubernetes/kube-apiserver-pod.yaml
                  row: 133
                  column: 13
                  path: topology_template.node_templates["kube_apiserver_container"].properties["spec"]["command"][1]
              - $primitive: --allow-privileged=true
              - $primitive: --anonymous-auth=True
              - $primitive: --apiserver-count=1
              - $primitive: --authorization-mode=Node,RBAC
              - $primitive: --bind-address=0.0.0.0
              - $functionCall:
                  name: tosca.function.concat
                  arguments:
                    - $primitive: --client-ca-file=
                    - $primitive: CA_CERT_PATH
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca/templates/kubernetes/kube-apiserver-pod.yaml
                  row: 139
                  column: 13
                  path: topology_template.node_templates["kube_apiserver_container"].properties["spec"]["command"][7]
              - $primitive: --default-not-ready-toleration-seconds=300
              - $primitive: --default-unreachable-toleration-seconds=300
              - $primitive: --enable-admission-plugins=NodeRestriction
              - $primitive: --enable-aggregator-routing=False
              - $primitive: --enable-bootstrap-token-auth=true
              - $primitive: --endpoint-reconciler-type=lease
              - $functionCall:
                  name: tosca.function.concat
                  arguments:
                    - $primitive: --etcd-servers=
                    - $functionCall:
                        name: tosca.function.join
                        arguments:
                          - $primitive:
                              - http://ETCD_ADDR:ETCD_PORT
                          - $primitive: ','
                        url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca/templates/kubernetes/kube-apiserver-pod.yaml
                        row: 146
                        column: 13
                        path: topology_template.node_templates["kube_apiserver_container"].properties["spec"]["command"][14]
                  url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca/templates/kubernetes/kube-apiserver-pod.yaml
                  row: 146
                  column: 13
                  path: topology_template.node_templates["kube_apiserver_container"].properties["spec"]["command"][14]
              - $primitive: --event-ttl=1h0m0s
              - $primitive: --kubelet-certificate-authority={{ ca_cert_path }}
              - $primitive: --kubelet-client-certificate={{ kubelet_client_cert_path }}
              - $primitive: --kubelet-client-key={{ kubelet_client_key_path }}
              - $primitive: --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname,ExternalDNS,ExternalIP
              - $primitive: --profiling=False
              - $primitive: --request-timeout=1m0s
              - $primitive: --requestheader-allowed-names=front-proxy-client
              - $primitive: --requestheader-client-ca-file={{ ca_cert_path }}
              - $primitive: --requestheader-extra-headers-prefix=X-Remote-Extra-
              - $primitive: --requestheader-group-headers=X-Remote-Group
              - $primitive: --requestheader-username-headers=X-Remote-User
              - $primitive: --runtime-config=authorization.k8s.io/v1beta1=true
              - $primitive: --secure-port=6443
              - $primitive: --service-account-key-file={{ sa_cert_path }}
              - $primitive: --service-account-signing-key-file={{ sa_key_path }}
              - $primitive: --service-account-issuer=https://{{ public_address }}:6443
              - $primitive: --service-cluster-ip-range={{ service_cidr }}
              - $primitive: --service-node-port-range=30000-32767
              - $primitive: --storage-backend=etcd3
              - $primitive: --tls-cert-file={{ cert_path }}
              - $primitive: --tls-private-key-file={{ key_path }}
          - $key:
              $primitive: name
            $primitive: kube-apiserver
          - $key:
              $primitive: image
            $primitive: k8s.gcr.io/kube-apiserver:{{ kube_version }}
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
      volume_mounts:
        $meta:
          type: list
          element:
            type: string
        $primitive: null
    requirements:
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: tls_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{0}
          row: 179
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: tls_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{1}
          row: 180
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: sa_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{2}
          row: 181
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: sa_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{3}
          row: 182
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: ca_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{4}
          row: 183
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: kubelet_client_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{5}
          row: 184
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: kubelet_client_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_container"].requirements{6}
          row: 185
          column: 19
    capabilities:
      container:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Container:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kube_apiserver_container"].capabilities["container"]
          row: 127
          column: 5
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kube_apiserver_container"].capabilities["feature"]
          row: 127
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  kube_apiserver_pod:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Pod:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.StaticPod:
        parent: kubetos.nodes.Kubernetes.Pod
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      host_network:
        $meta:
          type: boolean
        $primitive: true
      priority_class_name:
        $meta:
          type: string
        $primitive: system-node-critical
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements:
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: tls_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{0}
          row: 193
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: tls_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{1}
          row: 194
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: sa_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{2}
          row: 195
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: sa_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{3}
          row: 196
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: ca_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{4}
          row: 197
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: kubelet_client_cert_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{5}
          row: 198
          column: 19
      - name: volume
        capabilityTypeName: kubetos.capabilities.Kubernetes.Volume
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: kubelet_client_key_volume
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{6}
          row: 199
          column: 19
      - name: host
        capabilityTypeName: kubetos.capabilities.Kubelet
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: worker
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::HostedOn:
              description: This type represents a hosting relationship between two nodes.
              metadata:
                role: host
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.3
                tosca.canonical-name: tosca::HostedOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{7}
          row: 200
          column: 17
      - name: container
        capabilityTypeName: kubetos.capabilities.Kubernetes.Container
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: ""
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::DependsOn:
              description: This type represents a general dependency relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.2
                tosca.canonical-name: tosca::DependsOn
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].requirements{8}
          row: 192
          column: 7
    capabilities:
      endpoint:
        description: ""
        types:
          tosca::Endpoint:
            description: This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.7
              tosca.canonical-name: tosca::Endpoint
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties:
          initiator:
            $meta:
              type: string
              validators:
                - $functionCall:
                    name: tosca.constraint.valid_values
                    arguments:
                      - $primitive: source
                      - $primitive: target
                      - $primitive: peer
                    url: internal:/tosca/simple/1.3/capabilities.yaml
                    row: 170
                    column: 9
                    path: capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default
              description: The optional indicator of the direction of the connection.
            $primitive: source
          network_name:
            $meta:
              type: string
              description: 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'
            $primitive: PRIVATE
          protocol:
            $meta:
              type: string
              description: 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'
            $primitive: tcp
          secure:
            $meta:
              type: boolean
              description: Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.
            $primitive: false
        attributes:
          ip_address:
            $meta:
              type: string
              description: 'Note: This is the IP address as propagated up by the associated node''s host (Compute) container.'
            $primitive: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].capabilities["endpoint"]
          row: 187
          column: 5
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].capabilities["feature"]
          row: 187
          column: 5
      pod:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Manifestable:
            parent: tosca::Root
          kubetos.capabilities.Kubernetes.Pod:
            parent: kubetos.capabilities.Kubernetes.Manifestable
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes:
          manifest:
            $meta:
              type: string
            $primitive: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kube_apiserver_pod"].capabilities["pod"]
          row: 187
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  kubelet_client_cert_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: kubelet-client-cert
      path:
        $meta:
          type: string
        $primitive: KUBELET_CLIENT_CERT_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kubelet_client_cert_volume"].capabilities["feature"]
          row: 113
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kubelet_client_cert_volume"].capabilities["volume"]
          row: 113
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  kubelet_client_key_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: kubelet-client-key
      path:
        $meta:
          type: string
        $primitive: KUBELET_CLIENT_KEY_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kubelet_client_key_volume"].capabilities["feature"]
          row: 120
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["kubelet_client_key_volume"].capabilities["volume"]
          row: 120
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  sa_cert_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: sa-cert
      path:
        $meta:
          type: string
        $primitive: SA_CERT_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["sa_cert_volume"].capabilities["feature"]
          row: 92
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["sa_cert_volume"].capabilities["volume"]
          row: 92
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  sa_key_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: sa-key
      path:
        $meta:
          type: string
        $primitive: SA_KEY_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["sa_key_volume"].capabilities["feature"]
          row: 99
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["sa_key_volume"].capabilities["volume"]
          row: 99
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  tls_cert_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: tls_cert
      path:
        $meta:
          type: string
        $primitive: CERT_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tls_cert_volume"].capabilities["feature"]
          row: 78
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tls_cert_volume"].capabilities["volume"]
          row: 78
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  tls_key_volume:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Volume:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Volume.HostPath:
        parent: kubetos.nodes.Kubernetes.Volume
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives: []
    properties:
      name:
        $meta:
          type: string
        $primitive: tls_key
      path:
        $meta:
          type: string
        $primitive: TLS_KEY_PATH
      type:
        $meta:
          type: string
        $primitive: FileOrCreate
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements: []
    capabilities:
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tls_key_volume"].capabilities["feature"]
          row: 85
          column: 5
      volume:
        description: ""
        types:
          kubetos.capabilities.Kubernetes.Volume:
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["tls_key_volume"].capabilities["volume"]
          row: 85
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
  worker:
    metadata: {}
    description: ""
    types:
      kubetos.nodes.Kubernetes.Root:
        parent: tosca::Root
      kubetos.nodes.Kubernetes.Worker:
        parent: kubetos.nodes.Kubernetes.Root
      tosca::Root:
        description: The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
        metadata:
          specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          specification.location: 5.9.1
          tosca.canonical-name: tosca::Root
          tosca.normative: "true"
    directives:
      - substitute
    properties:
      kubernetes_version:
        $meta:
          type: version
        $functionCall:
          name: tosca.function.get_input
          arguments:
            - $primitive: kubernetes_version
          url: file:/home/shishqa/dev/ispras/clouni-substitution-mapping-sandbox/tosca/templates/kubernetes/kube-apiserver-pod.yaml
          row: 206
          column: 9
          path: topology_template.node_templates["worker"].properties["kubernetes_version"]
    attributes:
      state:
        $meta:
          type: string
          description: The state of the node instance.
        $primitive: initial
      tosca_id:
        $meta:
          type: string
          description: A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.
        $primitive: null
      tosca_name:
        $meta:
          type: string
          description: This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
        $primitive: null
    requirements:
      - name: apiserver
        capabilityTypeName: tosca::Endpoint
        capabilityName: ""
        nodeTypeName: ""
        nodeTemplateName: kube_apiserver_pod
        nodeTemplatePropertyValidators: {}
        capabilityPropertyValidators: {}
        relationship:
          metadata: {}
          description: ""
          types:
            tosca::ConnectsTo:
              description: This type represents a network connection relationship between two nodes.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.4
                tosca.canonical-name: tosca::ConnectsTo
                tosca.normative: "true"
              parent: tosca::Root
            tosca::Root:
              description: This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.
              metadata:
                specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                specification.location: 5.7.1
                tosca.canonical-name: tosca::Root
                tosca.normative: "true"
          properties: {}
          attributes:
            state:
              $meta:
                type: string
                description: The state of the relationship instance.
              $primitive: initial
            tosca_id:
              $meta:
                type: string
                description: A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.
              $primitive: null
            tosca_name:
              $meta:
                type: string
                description: This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.
              $primitive: null
          interfaces:
            Configure:
              description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
              types:
                tosca::Configure:
                  description: The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.5
                    tosca.canonical-name: tosca::Configure
                    tosca.normative: "true"
                  parent: tosca::Root
                tosca::Root:
                  description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
                  metadata:
                    specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                    specification.location: 5.8.3
                    tosca.canonical-name: tosca::Root
                    tosca.normative: "true"
              inputs: {}
              operations:
                add_source:
                  description: Operation to notify the target node of a source node which is now available via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                add_target:
                  description: Operation to notify the source node of a target node being added via a relationship.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_source:
                  description: Operation to post-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                post_configure_target:
                  description: Operation to post-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_source:
                  description: Operation to pre-configure the source endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                pre_configure_target:
                  description: Operation to pre-configure the target endpoint.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_source:
                  description: Operation to remove the source node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                remove_target:
                  description: Operation to remove a target node.
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
                target_changed:
                  description: Operation to notify source some property or attribute of the target changed
                  implementation: ""
                  dependencies: []
                  inputs: {}
                  outputs: {}
                  timeout: -1
              notifications: {}
        directives: []
        optional: false
        location:
          path: topology_template.node_templates["worker"].requirements{0}
          row: 208
          column: 22
    capabilities:
      endpoint:
        description: ""
        types:
          tosca::Endpoint:
            description: This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.7
              tosca.canonical-name: tosca::Endpoint
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties:
          initiator:
            $meta:
              type: string
              validators:
                - $functionCall:
                    name: tosca.constraint.valid_values
                    arguments:
                      - $primitive: source
                      - $primitive: target
                      - $primitive: peer
                    url: internal:/tosca/simple/1.3/capabilities.yaml
                    row: 170
                    column: 9
                    path: capability_types["tosca.capabilities.Endpoint"].properties["initiator"].default
              description: The optional indicator of the direction of the connection.
            $primitive: source
          network_name:
            $meta:
              type: string
              description: 'The optional name (or ID) of the network this endpoint should be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'
            $primitive: PRIVATE
          protocol:
            $meta:
              type: string
              description: 'The name of the protocol (i.e., the protocol prefix) that the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http, https, ftp, tcp, udp, etc.'
            $primitive: tcp
          secure:
            $meta:
              type: boolean
              description: Requests for the endpoint to be secure and use credentials supplied on the ConnectsTo relationship.
            $primitive: false
        attributes:
          ip_address:
            $meta:
              type: string
              description: 'Note: This is the IP address as propagated up by the associated node''s host (Compute) container.'
            $primitive: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["worker"].capabilities["endpoint"]
          row: 202
          column: 5
      feature:
        description: ""
        types:
          tosca::Node:
            description: The Node capability indicates the base capabilities of a TOSCA Node Type.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.2
              tosca.canonical-name: tosca::Node
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["worker"].capabilities["feature"]
          row: 202
          column: 5
      kubelet:
        description: ""
        types:
          kubetos.capabilities.Kubelet:
            parent: tosca::Container
          tosca::Container:
            description: The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.6
              tosca.canonical-name: tosca::Container
              tosca.normative: "true"
            parent: tosca::Root
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["worker"].capabilities["kubelet"]
          row: 202
          column: 5
      scalable:
        description: ""
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.1
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Scalable:
            description: This is the default TOSCA type that should be used to express a scalability capability for a node.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.5.13
              tosca.canonical-name: tosca::Scalable
              tosca.normative: "true"
            parent: tosca::Root
        properties:
          max_instances:
            $meta:
              type: integer
              description: This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.
            $primitive: 1
          min_instances:
            $meta:
              type: integer
              description: This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator.
            $primitive: 1
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
        location:
          path: topology_template.node_templates["worker"].capabilities["scalable"]
          row: 202
          column: 5
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
        types:
          tosca::Root:
            description: This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.3
              tosca.canonical-name: tosca::Root
              tosca.normative: "true"
          tosca::Standard:
            description: This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.
            metadata:
              specification.citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              specification.location: 5.8.4
              tosca.canonical-name: tosca::Standard
              tosca.normative: "true"
            parent: tosca::Root
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            outputs: {}
            timeout: -1
        notifications: {}
    artifacts: {}
groups: {}
policies: {}
inputs:
  cluster_name:
    $meta:
      type: string
    $primitive: kubernetes-cluster
  kubernetes_version:
    $meta:
      type: version
    $primitive:
      $string: 1.21.0
      $originalString: 1.21.0
      $comparer: tosca.comparer.version
      major: 1
      minor: 21
      fix: 0
      qualifier: ""
      build: 0
  pod_cidr:
    $meta:
      type: string
    $primitive: 10.233.0.0/16
  service_cidr:
    $meta:
      type: string
    $primitive: 10.32.0.0/16
outputs: {}
workflows: {}
substitution:
  type: kubetos.nodes.Kubernetes.APIServer
  typeMetadata: {}
  inputPointers:
    kubernetes_version:
      target: kubernetes_version
  capabilityPointers:
    access_address:
      nodeTemplateName: kube_apiserver_pod
      target: endpoint
  requirementPointers: {}
  propertyPointers: {}
  propertyValues: {}
  attributePointers: {}
  interfacePointers: {}
metadata:
  template_author: shishqa
  template_name: kubetos
  template_version: "1.0"
scriptletNamespace: {}
